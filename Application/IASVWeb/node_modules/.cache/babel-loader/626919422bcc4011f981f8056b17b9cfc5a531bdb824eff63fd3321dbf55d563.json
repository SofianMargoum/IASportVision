{"ast":null,"code":"var _jsxFileName = \"C:\\\\perso\\\\IA Sport Vision\\\\Application\\\\DEV\\\\IASV\\\\src\\\\components\\\\SearchClub.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './css/SearchClub.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchClub = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [clubs, setClubs] = useState([]);\n  const [selectedClub, setSelectedClub] = useState(null); // État pour le club sélectionné\n\n  const handleSearch = async () => {\n    const response = await fetch(`https://api-dofa.prd-aws.fff.fr/api/clubs?clNom=${searchTerm}`);\n    const data = await response.json();\n    const clubData = data['hydra:member'].map(club => ({\n      name: club.name,\n      logo: club.logo // Extraction du logo, mais non utilisé pour l'affichage\n    }));\n    setClubs(clubData);\n  };\n  const handleClubClick = club => {\n    setSelectedClub(club); // Mise à jour de l'état avec le club sélectionné\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-club-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        placeholder: \"Search for a club\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selected Club:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), selectedClub ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: selectedClub.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this) // Affichage uniquement du nom du club sélectionné\n      : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No club selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: clubs.map((club, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleClubClick(club),\n        children: [club.name, \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchClub, \"IJcfJo/G42H9avCzwiORMqcv150=\");\n_c = SearchClub;\nexport default SearchClub;\nvar _c;\n$RefreshReg$(_c, \"SearchClub\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SearchClub","_s","searchTerm","setSearchTerm","clubs","setClubs","selectedClub","setSelectedClub","handleSearch","response","fetch","data","json","clubData","map","club","name","logo","handleClubClick","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","index","_c","$RefreshReg$"],"sources":["C:/perso/IA Sport Vision/Application/DEV/IASV/src/components/SearchClub.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './css/SearchClub.css';\r\n\r\nconst SearchClub = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [clubs, setClubs] = useState([]);\r\n  const [selectedClub, setSelectedClub] = useState(null); // État pour le club sélectionné\r\n\r\n  const handleSearch = async () => {\r\n    const response = await fetch(`https://api-dofa.prd-aws.fff.fr/api/clubs?clNom=${searchTerm}`);\r\n    const data = await response.json();\r\n    const clubData = data['hydra:member'].map(club => ({\r\n      name: club.name,\r\n      logo: club.logo // Extraction du logo, mais non utilisé pour l'affichage\r\n    }));\r\n    setClubs(clubData);\r\n  };\r\n\r\n  const handleClubClick = (club) => {\r\n    setSelectedClub(club); // Mise à jour de l'état avec le club sélectionné\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-club-container\">\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          placeholder=\"Search for a club\"\r\n        />\r\n        <button onClick={handleSearch}>Search</button>\r\n      </div>\r\n      <div>\r\n        <h2>Selected Club:</h2>\r\n        {selectedClub ? (\r\n          <span>{selectedClub.name}</span> // Affichage uniquement du nom du club sélectionné\r\n        ) : (\r\n          <p>No club selected</p>\r\n        )}\r\n      </div>\r\n      <ul>\r\n        {clubs.map((club, index) => (\r\n          <li key={index} onClick={() => handleClubClick(club)}>\r\n            {club.name} {/* Affichage uniquement du nom du club dans la liste */}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchClub;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
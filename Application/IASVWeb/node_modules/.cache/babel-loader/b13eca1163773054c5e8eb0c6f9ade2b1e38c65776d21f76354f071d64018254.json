{"ast":null,"code":"let selectedClub = null;\nlet selectedCompetition = null;\n\n// Créer un objet d'événement personnalisé pour notifier des changements\nconst eventEmitter = new EventTarget();\nconst setSelectedClub = club => {\n  selectedClub = club;\n  localStorage.setItem('selectedClub', JSON.stringify(club));\n\n  // Déclencher l'événement lorsqu'un club est sélectionné\n  eventEmitter.dispatchEvent(new CustomEvent('clubChanged', {\n    detail: club\n  }));\n};\nconst getSelectedClub = () => {\n  if (!selectedClub) {\n    selectedClub = JSON.parse(localStorage.getItem('selectedClub'));\n  }\n  return selectedClub;\n};\nconst setSelectedCompetition = competition => {\n  selectedCompetition = competition;\n  localStorage.setItem('selectedCompetition', competition);\n\n  // Déclencher l'événement lorsqu'une compétition est sélectionnée\n  eventEmitter.dispatchEvent(new CustomEvent('competitionChanged', {\n    detail: competition\n  }));\n};\nconst getSelectedCompetition = () => {\n  if (!selectedCompetition) {\n    selectedCompetition = localStorage.getItem('selectedCompetition');\n  }\n  return selectedCompetition;\n};\nconst onClubChange = callback => {\n  eventEmitter.addEventListener('clubChanged', event => {\n    callback(event.detail);\n  });\n};\nconst onCompetitionChange = callback => {\n  eventEmitter.addEventListener('competitionChanged', event => {\n    callback(event.detail);\n  });\n};\nmodule.exports = {\n  setSelectedClub,\n  getSelectedClub,\n  setSelectedCompetition,\n  getSelectedCompetition,\n  onClubChange,\n  onCompetitionChange\n};","map":{"version":3,"names":["selectedClub","selectedCompetition","eventEmitter","EventTarget","setSelectedClub","club","localStorage","setItem","JSON","stringify","dispatchEvent","CustomEvent","detail","getSelectedClub","parse","getItem","setSelectedCompetition","competition","getSelectedCompetition","onClubChange","callback","addEventListener","event","onCompetitionChange","module","exports"],"sources":["C:/perso/IA Sport Vision/Application/IASV/src/config.js"],"sourcesContent":["let selectedClub = null;\r\nlet selectedCompetition = null;\r\n\r\n// Créer un objet d'événement personnalisé pour notifier des changements\r\nconst eventEmitter = new EventTarget();\r\n\r\nconst setSelectedClub = (club) => {\r\n  selectedClub = club;\r\n  localStorage.setItem('selectedClub', JSON.stringify(club));\r\n  \r\n  // Déclencher l'événement lorsqu'un club est sélectionné\r\n  eventEmitter.dispatchEvent(new CustomEvent('clubChanged', { detail: club }));\r\n};\r\n\r\nconst getSelectedClub = () => {\r\n  if (!selectedClub) {\r\n    selectedClub = JSON.parse(localStorage.getItem('selectedClub'));\r\n  }\r\n  return selectedClub;\r\n};\r\n\r\nconst setSelectedCompetition = (competition) => {\r\n  selectedCompetition = competition;\r\n  localStorage.setItem('selectedCompetition', competition);\r\n  \r\n  // Déclencher l'événement lorsqu'une compétition est sélectionnée\r\n  eventEmitter.dispatchEvent(new CustomEvent('competitionChanged', { detail: competition }));\r\n};\r\n\r\nconst getSelectedCompetition = () => {\r\n  if (!selectedCompetition) {\r\n    selectedCompetition = localStorage.getItem('selectedCompetition');\r\n  }\r\n  return selectedCompetition;\r\n};\r\n\r\nconst onClubChange = (callback) => {\r\n  eventEmitter.addEventListener('clubChanged', (event) => {\r\n    callback(event.detail);\r\n  });\r\n};\r\n\r\nconst onCompetitionChange = (callback) => {\r\n  eventEmitter.addEventListener('competitionChanged', (event) => {\r\n    callback(event.detail);\r\n  });\r\n};\r\n\r\nmodule.exports = {\r\n  setSelectedClub,\r\n  getSelectedClub,\r\n  setSelectedCompetition,\r\n  getSelectedCompetition,\r\n  onClubChange,\r\n  onCompetitionChange,\r\n};\r\n"],"mappings":"AAAA,IAAIA,YAAY,GAAG,IAAI;AACvB,IAAIC,mBAAmB,GAAG,IAAI;;AAE9B;AACA,MAAMC,YAAY,GAAG,IAAIC,WAAW,CAAC,CAAC;AAEtC,MAAMC,eAAe,GAAIC,IAAI,IAAK;EAChCL,YAAY,GAAGK,IAAI;EACnBC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;;EAE1D;EACAH,YAAY,CAACQ,aAAa,CAAC,IAAIC,WAAW,CAAC,aAAa,EAAE;IAAEC,MAAM,EAAEP;EAAK,CAAC,CAAC,CAAC;AAC9E,CAAC;AAED,MAAMQ,eAAe,GAAGA,CAAA,KAAM;EAC5B,IAAI,CAACb,YAAY,EAAE;IACjBA,YAAY,GAAGQ,IAAI,CAACM,KAAK,CAACR,YAAY,CAACS,OAAO,CAAC,cAAc,CAAC,CAAC;EACjE;EACA,OAAOf,YAAY;AACrB,CAAC;AAED,MAAMgB,sBAAsB,GAAIC,WAAW,IAAK;EAC9ChB,mBAAmB,GAAGgB,WAAW;EACjCX,YAAY,CAACC,OAAO,CAAC,qBAAqB,EAAEU,WAAW,CAAC;;EAExD;EACAf,YAAY,CAACQ,aAAa,CAAC,IAAIC,WAAW,CAAC,oBAAoB,EAAE;IAAEC,MAAM,EAAEK;EAAY,CAAC,CAAC,CAAC;AAC5F,CAAC;AAED,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EACnC,IAAI,CAACjB,mBAAmB,EAAE;IACxBA,mBAAmB,GAAGK,YAAY,CAACS,OAAO,CAAC,qBAAqB,CAAC;EACnE;EACA,OAAOd,mBAAmB;AAC5B,CAAC;AAED,MAAMkB,YAAY,GAAIC,QAAQ,IAAK;EACjClB,YAAY,CAACmB,gBAAgB,CAAC,aAAa,EAAGC,KAAK,IAAK;IACtDF,QAAQ,CAACE,KAAK,CAACV,MAAM,CAAC;EACxB,CAAC,CAAC;AACJ,CAAC;AAED,MAAMW,mBAAmB,GAAIH,QAAQ,IAAK;EACxClB,YAAY,CAACmB,gBAAgB,CAAC,oBAAoB,EAAGC,KAAK,IAAK;IAC7DF,QAAQ,CAACE,KAAK,CAACV,MAAM,CAAC;EACxB,CAAC,CAAC;AACJ,CAAC;AAEDY,MAAM,CAACC,OAAO,GAAG;EACfrB,eAAe;EACfS,eAAe;EACfG,sBAAsB;EACtBE,sBAAsB;EACtBC,YAAY;EACZI;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\perso\\\\IA Sport Vision\\\\Application\\\\IASV\\\\src\\\\components\\\\Resultat\\\\ClassementsContent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchMatchesForClub, fetchClassementJournees } from './../api'; // Import des fonctions API\nimport './css/ClassementsContent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ClassementsContent({\n  cl_no\n}) {\n  _s();\n  const [classements, setClassements] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [competitionId, setCompetitionId] = useState(null);\n  const [phaseId, setPhaseId] = useState(null);\n  const [pouleId, setPouleId] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Étape 1 : Récupérer les matches du club à l'aide de l'API fetchMatchesForClub\n        const matches = await fetchMatchesForClub(cl_no);\n\n        // Vérifier si des matches sont disponibles\n        if (matches.length > 0) {\n          const firstMatch = matches[0]; // On prend le premier match comme référence\n\n          // Extraire les informations competitionId, phaseId, pouleId du premier match\n          setCompetitionId(firstMatch.competitionNumber);\n          setPhaseId(firstMatch.phaseNumber);\n          setPouleId(firstMatch.pouleNumber);\n\n          // Étape 2 : Une fois les données disponibles, récupérer le classement\n          const classementsData = await fetchClassementJournees(firstMatch.competitionNumber, firstMatch.phaseNumber, firstMatch.pouleNumber);\n          setClassements(classementsData);\n        } else {\n          throw new Error(\"Aucun match trouvé pour ce club.\");\n        }\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [cl_no]); // Le hook dépend de cl_no (numéro du club)\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Chargement des classements...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Erreur lors du chargement des classements : \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"classement-content\",\n    children: classements.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"classement-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Club\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Pts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"MJ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"G\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"N\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"P\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: classements.map((journee, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"team-column\",\n            children: journee.teamName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"points-column\",\n            children: journee.points\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: journee.totalGames\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: journee.wonGames\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: journee.drawGames\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: journee.lostGames\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: \"Aucun classement disponible pour le moment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(ClassementsContent, \"W8wCONFqH/S8BFy+i0qi6+hkh8U=\");\n_c = ClassementsContent;\nexport default ClassementsContent;\nvar _c;\n$RefreshReg$(_c, \"ClassementsContent\");","map":{"version":3,"names":["React","useState","useEffect","fetchMatchesForClub","fetchClassementJournees","jsxDEV","_jsxDEV","ClassementsContent","cl_no","_s","classements","setClassements","loading","setLoading","error","setError","competitionId","setCompetitionId","phaseId","setPhaseId","pouleId","setPouleId","fetchData","matches","length","firstMatch","competitionNumber","phaseNumber","pouleNumber","classementsData","Error","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","map","journee","index","teamName","points","totalGames","wonGames","drawGames","lostGames","_c","$RefreshReg$"],"sources":["C:/perso/IA Sport Vision/Application/IASV/src/components/Resultat/ClassementsContent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchMatchesForClub, fetchClassementJournees } from './../api'; // Import des fonctions API\r\nimport './css/ClassementsContent.css';\r\n\r\nfunction ClassementsContent({ cl_no }) {\r\n  const [classements, setClassements] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [competitionId, setCompetitionId] = useState(null);\r\n  const [phaseId, setPhaseId] = useState(null);\r\n  const [pouleId, setPouleId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Étape 1 : Récupérer les matches du club à l'aide de l'API fetchMatchesForClub\r\n        const matches = await fetchMatchesForClub(cl_no);\r\n\r\n        // Vérifier si des matches sont disponibles\r\n        if (matches.length > 0) {\r\n          const firstMatch = matches[0]; // On prend le premier match comme référence\r\n\r\n          // Extraire les informations competitionId, phaseId, pouleId du premier match\r\n          setCompetitionId(firstMatch.competitionNumber);\r\n          setPhaseId(firstMatch.phaseNumber);\r\n          setPouleId(firstMatch.pouleNumber);\r\n\r\n          // Étape 2 : Une fois les données disponibles, récupérer le classement\r\n          const classementsData = await fetchClassementJournees(\r\n            firstMatch.competitionNumber,\r\n            firstMatch.phaseNumber,\r\n            firstMatch.pouleNumber\r\n          );\r\n          setClassements(classementsData);\r\n        } else {\r\n          throw new Error(\"Aucun match trouvé pour ce club.\");\r\n        }\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [cl_no]); // Le hook dépend de cl_no (numéro du club)\r\n\r\n  if (loading) {\r\n    return <div>Chargement des classements...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Erreur lors du chargement des classements : {error.message}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"classement-content\">\r\n      {classements.length > 0 ? (\r\n        <table className=\"classement-table\">\r\n          <thead>\r\n            <tr>\r\n              <th></th> {/* Colonne pour la position */}\r\n              <th>Club</th>\r\n              <th>Pts</th>\r\n              <th>MJ</th>\r\n              <th>G</th>\r\n              <th>N</th>\r\n              <th>P</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {classements.map((journee, index) => (\r\n              <tr key={index}>\r\n                <td>{index + 1}</td> {/* Affichage de la position */}\r\n                <td className=\"team-column\">{journee.teamName}</td>\r\n                <td className=\"points-column\">{journee.points}</td>\r\n                <td>{journee.totalGames}</td>\r\n                <td>{journee.wonGames}</td>\r\n                <td>{journee.drawGames}</td>\r\n                <td>{journee.lostGames}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p className=\"error\">Aucun classement disponible pour le moment.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClassementsContent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
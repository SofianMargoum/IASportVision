{"ast":null,"code":"// api.js\n// Fonction pour rechercher des clubs\nexport const searchClubs=async searchTerm=>{try{const response=await fetch(\"https://api-dofa.prd-aws.fff.fr/api/clubs?clNom=\".concat(searchTerm));const data=await response.json();return data['hydra:member'].map(club=>({name:club.name,logo:club.logo,cl_no:club.cl_no}));}catch(error){console.error('Error fetching clubs:',error);return[];}};// Fonction pour démarrer l'enregistrement\nexport const startRecording=async()=>{try{const response=await fetch('https://ia-sport.oa.r.appspot.com/api/start-recording',{method:'PUT'});if(!response.ok){throw new Error('Échec du démarrage de l\\'enregistrement');}return response;}catch(error){console.error('Error starting recording:',error);throw error;}};// Fonction pour arrêter l'enregistrement\nexport const stopRecording=async()=>{try{const response=await fetch('https://ia-sport.oa.r.appspot.com/api/stop-recording',{method:'PUT'});if(!response.ok){throw new Error('Échec de l\\'arrêt de l\\'enregistrement');}return response;}catch(error){console.error('Error stopping recording:',error);throw error;}};// Fonction pour récupérer l'URI de lecture et la durée de la vidéo\nexport const getPlaybackURI=async()=>{try{const response=await fetch('https://ia-sport.oa.r.appspot.com/api/search',{method:'GET'});if(!response.ok){throw new Error('Échec de la récupération de l\\'URI de lecture');}return await response.json();}catch(error){console.error('Error fetching playback URI:',error);throw error;}};// Fonction pour télécharger la vidéo\nexport const uploadVideo=async(filename,playbackURI,directory,duration)=>{try{const response=await fetch('https://ia-sport.oa.r.appspot.com/api/upload',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({filename:directory+\"\".concat(filename,\".mp4\"),cameraRtspUrl:playbackURI,directory:directory,duration:duration})});if(!response.ok){throw new Error('Échec du téléchargement de la vidéo');}return response;}catch(error){console.error('Error uploading video:',error);throw error;}};export const fetchCompetitionsForClub=async cl_no=>{try{const response=await fetch(\"https://api-dofa.prd-aws.fff.fr/api/clubs/\".concat(cl_no,\"/equipes\"));const data=await response.json();// Extraire les noms des compétitions dont le type est \"CH\"\nconst competitionNames=data['hydra:member'].flatMap(team=>team.engagements.filter(engagement=>engagement.competition.type===\"CH\").map(engagement=>engagement.competition.name));return competitionNames;}catch(error){console.error('Error fetching competitions:',error);return[];}};export const fetchMatchesForClub=async cl_no=>{try{const response=await fetch(\"https://api-dofa.prd-aws.fff.fr/api/clubs/\".concat(cl_no,\"/matchs\"));if(!response.ok){throw new Error('Échec de la récupération des matchs');}const data=await response.json();return data['hydra:member'].filter(match=>match.away&&match.away.short_name&&match.home&&match.home.short_name).map(match=>{var homeCompetitionName='';var awayCompetitionName='';if(match.home&&match.home.engagements){for(let i=0;i<match.home.engagements.length;i++){homeCompetitionName=match.home.engagements[i].competition.type==='CH'?match.home.engagements[i].competition.name:homeCompetitionName;}}if(match.away&&match.away.engagements){for(let i=0;i<match.away.engagements.length;i++){awayCompetitionName=match.away.engagements[i].competition.type==='CH'?match.away.engagements[i].competition.name:awayCompetitionName;}}var competitionName=match.competition?match.competition.name:'';var competitionNumber=match.competition?match.competition.cp_no:'';var phaseNumber=match.phase?match.phase.number:'';var pouleNumber=match.poule?match.poule.stage_number:'';return{id:match['@id'].split('/').pop(),// Extraction de l'ID depuis l'URL\ndate:match.date,time:match.time,home_score:match.home_score,away_score:match.away_score,season:match.competition.season,// Ajout de la saison\nhomeTeam:match.home&&match.home.short_name?match.home.short_name:'',// Vérifie l'existence\nawayTeam:match.away&&match.away.short_name?match.away.short_name:'',// Vérifie l'existence\nhomeLogo:match.home&&match.home.club.logo?match.home.club.logo:'',// Vérifie l'existence\nawayLogo:match.away&&match.away.club.logo?match.away.club.logo:'',// Vérifie l'existence\ncompetitionName,// Ajout du nom de la compétition de l'équipe à domicile\ncompetitionNumber,phaseNumber,pouleNumber,homeCompetitionName,// Ajout du nom de la compétition de l'équipe à domicile\nawayCompetitionName// Ajout du nom de la compétition de l'équipe à l'extérieur\n};});}catch(error){console.error('Error fetching matches:',error);return[];}};// Fonction pour récupérer le classement des journées pour une poule spécifique\nexport const fetchClassementJournees=async(competitionId,phaseId,pouleId)=>{try{const response=await fetch(\"https://api-dofa.prd-aws.fff.fr/api/compets/\".concat(competitionId,\"/phases/\").concat(phaseId,\"/poules/\").concat(pouleId,\"/classement_journees\"));if(!response.ok){throw new Error('Échec de la récupération du classement des journées');}const data=await response.json();return data['hydra:member'].map(journee=>({journeeNumber:journee.cj_no,season:journee.season,date:journee.date,rank:journee.rank,points:journee.point_count,penaltyPoints:journee.penalty_point_count,wonGames:journee.won_games_count,drawGames:journee.draw_games_count,lostGames:journee.lost_games_count,forfeits:journee.forfeits_games_count,goalsFor:journee.goals_for_count,goalsAgainst:journee.goals_against_count,goalDifference:journee.goals_diff,totalGames:journee.total_games_count,teamName:journee.equipe.short_name,teamCategory:journee.equipe.category_label,teamGender:journee.equipe.category_gender,pouleName:journee.poule.name,stageNumber:journee.poule.stage_number}));}catch(error){console.error('Error fetching classement journées:',error);return[];}};","map":{"version":3,"names":["searchClubs","searchTerm","response","fetch","concat","data","json","map","club","name","logo","cl_no","error","console","startRecording","method","ok","Error","stopRecording","getPlaybackURI","uploadVideo","filename","playbackURI","directory","duration","headers","body","JSON","stringify","cameraRtspUrl","fetchCompetitionsForClub","competitionNames","flatMap","team","engagements","filter","engagement","competition","type","fetchMatchesForClub","match","away","short_name","home","homeCompetitionName","awayCompetitionName","i","length","competitionName","competitionNumber","cp_no","phaseNumber","phase","number","pouleNumber","poule","stage_number","id","split","pop","date","time","home_score","away_score","season","homeTeam","awayTeam","homeLogo","awayLogo","fetchClassementJournees","competitionId","phaseId","pouleId","journee","journeeNumber","cj_no","rank","points","point_count","penaltyPoints","penalty_point_count","wonGames","won_games_count","drawGames","draw_games_count","lostGames","lost_games_count","forfeits","forfeits_games_count","goalsFor","goals_for_count","goalsAgainst","goals_against_count","goalDifference","goals_diff","totalGames","total_games_count","teamName","equipe","teamCategory","category_label","teamGender","category_gender","pouleName","stageNumber"],"sources":["C:/perso/IA Sport Vision/Application/IASV/src/components/api.js"],"sourcesContent":["// api.js\r\n\r\n// Fonction pour rechercher des clubs\r\nexport const searchClubs = async (searchTerm) => {\r\n  try {\r\n    const response = await fetch(`https://api-dofa.prd-aws.fff.fr/api/clubs?clNom=${searchTerm}`);\r\n    const data = await response.json();\r\n    return data['hydra:member'].map(club => ({\r\n      name: club.name,\r\n      logo: club.logo,\r\n      cl_no: club.cl_no,\r\n    }));\r\n  } catch (error) {\r\n    console.error('Error fetching clubs:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n\r\n// Fonction pour démarrer l'enregistrement\r\nexport const startRecording = async () => {\r\n  try {\r\n    const response = await fetch('https://ia-sport.oa.r.appspot.com/api/start-recording', {\r\n      method: 'PUT'\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Échec du démarrage de l\\'enregistrement');\r\n    }\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Error starting recording:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fonction pour arrêter l'enregistrement\r\nexport const stopRecording = async () => {\r\n  try {\r\n    const response = await fetch('https://ia-sport.oa.r.appspot.com/api/stop-recording', {\r\n      method: 'PUT'\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Échec de l\\'arrêt de l\\'enregistrement');\r\n    }\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Error stopping recording:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fonction pour récupérer l'URI de lecture et la durée de la vidéo\r\nexport const getPlaybackURI = async () => {\r\n  try {\r\n    const response = await fetch('https://ia-sport.oa.r.appspot.com/api/search', {\r\n      method: 'GET'\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Échec de la récupération de l\\'URI de lecture');\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching playback URI:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fonction pour télécharger la vidéo\r\nexport const uploadVideo = async (filename, playbackURI, directory, duration) => {\r\n  try {\r\n    const response = await fetch('https://ia-sport.oa.r.appspot.com/api/upload', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        filename: directory + `${filename}.mp4`,\r\n        cameraRtspUrl: playbackURI,\r\n        directory: directory,\r\n        duration: duration,\r\n      }),\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Échec du téléchargement de la vidéo');\r\n    }\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Error uploading video:', error);\r\n    throw error;\r\n  }\r\n};\r\nexport const fetchCompetitionsForClub = async (cl_no) => {\r\n  try {\r\n    const response = await fetch(`https://api-dofa.prd-aws.fff.fr/api/clubs/${cl_no}/equipes`);\r\n    const data = await response.json();\r\n\r\n    // Extraire les noms des compétitions dont le type est \"CH\"\r\n    const competitionNames = data['hydra:member'].flatMap(team =>\r\n      team.engagements\r\n        .filter(engagement => engagement.competition.type === \"CH\")\r\n        .map(engagement => engagement.competition.name)\r\n    );\r\n\r\n    return competitionNames;\r\n  } catch (error) {\r\n    console.error('Error fetching competitions:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchMatchesForClub = async (cl_no) => {\r\n  try {\r\n    const response = await fetch(`https://api-dofa.prd-aws.fff.fr/api/clubs/${cl_no}/matchs`);\r\n    if (!response.ok) {\r\n      throw new Error('Échec de la récupération des matchs');\r\n    }\r\n    const data = await response.json();\r\n\r\n    return data['hydra:member']\r\n      .filter(match => \r\n        ( match.away && match.away.short_name && match.home && match.home.short_name)\r\n      )\r\n      .map(match => {\r\n        var homeCompetitionName = '';\r\n        var awayCompetitionName = '';\r\n         \r\n          if(match.home && match.home.engagements ){\r\n            for(let i = 0 ; i < match.home.engagements.length ; i++){\r\n              homeCompetitionName = match.home.engagements[i].competition.type === 'CH' ? match.home.engagements[i].competition.name : homeCompetitionName;\r\n            } \r\n          }\r\n          if(match.away && match.away.engagements){                  \r\n            for(let i = 0 ; i < match.away.engagements.length ;i++){\r\n              awayCompetitionName = match.away.engagements[i].competition.type === 'CH' ? match.away.engagements[i].competition.name : awayCompetitionName;\r\n            }\r\n          }\r\n          var competitionName = match.competition  ? match.competition.name :'';\r\n          var competitionNumber = match.competition  ? match.competition.cp_no :'';\r\n          var phaseNumber = match.phase  ? match.phase.number :'';\r\n          var pouleNumber = match.poule  ? match.poule.stage_number :'';\r\n        return {\r\n          id: match['@id'].split('/').pop(), // Extraction de l'ID depuis l'URL\r\n          date: match.date,\r\n          time: match.time,\r\n          home_score: match.home_score,\r\n          away_score: match.away_score,\r\n          season: match.competition.season, // Ajout de la saison\r\n          homeTeam: match.home && match.home.short_name ? match.home.short_name : '', // Vérifie l'existence\r\n          awayTeam: match.away && match.away.short_name ? match.away.short_name : '', // Vérifie l'existence\r\n          homeLogo: match.home && match.home.club.logo ? match.home.club.logo : '', // Vérifie l'existence\r\n          awayLogo: match.away && match.away.club.logo ? match.away.club.logo : '', // Vérifie l'existence\r\n          competitionName, // Ajout du nom de la compétition de l'équipe à domicile\r\n          competitionNumber,\r\n          phaseNumber,\r\n          pouleNumber,\r\n          homeCompetitionName, // Ajout du nom de la compétition de l'équipe à domicile\r\n          awayCompetitionName, // Ajout du nom de la compétition de l'équipe à l'extérieur\r\n        };\r\n      });\r\n  } catch (error) {\r\n    console.error('Error fetching matches:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n\r\n// Fonction pour récupérer le classement des journées pour une poule spécifique\r\nexport const fetchClassementJournees = async (competitionId, phaseId, pouleId) => {\r\n  try {\r\n    const response = await fetch(`https://api-dofa.prd-aws.fff.fr/api/compets/${competitionId}/phases/${phaseId}/poules/${pouleId}/classement_journees`);\r\n    if (!response.ok) {\r\n      throw new Error('Échec de la récupération du classement des journées');\r\n    }\r\n    const data = await response.json();\r\n\r\n    return data['hydra:member'].map(journee => ({\r\n      journeeNumber: journee.cj_no,\r\n      season: journee.season,\r\n      date: journee.date,\r\n      rank: journee.rank,\r\n      points: journee.point_count,\r\n      penaltyPoints: journee.penalty_point_count,\r\n      wonGames: journee.won_games_count,\r\n      drawGames: journee.draw_games_count,\r\n      lostGames: journee.lost_games_count,\r\n      forfeits: journee.forfeits_games_count,\r\n      goalsFor: journee.goals_for_count,\r\n      goalsAgainst: journee.goals_against_count,\r\n      goalDifference: journee.goals_diff,\r\n      totalGames: journee.total_games_count,\r\n      teamName: journee.equipe.short_name,\r\n      teamCategory: journee.equipe.category_label,\r\n      teamGender: journee.equipe.category_gender,\r\n      pouleName: journee.poule.name,\r\n      stageNumber: journee.poule.stage_number,\r\n    }));\r\n  } catch (error) {\r\n    console.error('Error fetching classement journées:', error);\r\n    return [];\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
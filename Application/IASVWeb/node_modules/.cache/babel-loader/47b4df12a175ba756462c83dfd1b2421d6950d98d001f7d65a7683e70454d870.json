{"ast":null,"code":"var _jsxFileName = \"C:\\\\perso\\\\IA Sport Vision\\\\Application\\\\IASV\\\\src\\\\components\\\\Explore\\\\SearchClub.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { View, TextInput, Text, TouchableOpacity, ScrollView } from 'react-native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchClub = ({\n  selectedClub,\n  selectedCompetition,\n  onSelectClub,\n  onCompetitionSelected\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [clubs, setClubs] = useState([]);\n  const [recentClubs, setRecentClubs] = useState([]);\n  const [competitionNames, setCompetitionNames] = useState([]);\n  const [selectedClubName, setSelectedClubName] = useState(null);\n  const scrollViewRef = useRef(null); // Référence à ScrollView\n\n  useEffect(() => {\n    // Charger les clubs récents depuis le stockage local (ou une autre source)\n    const savedRecentClubs = JSON.parse(localStorage.getItem('recentClubs')) || [];\n    setRecentClubs(savedRecentClubs);\n  }, []);\n  const handleClubClick = async club => {\n    setSearchTerm('');\n    setSelectedClubName(club.name);\n    onSelectClub(club);\n\n    // Faire défiler jusqu'en haut\n    if (scrollViewRef.current) {\n      scrollViewRef.current.scrollTo({\n        y: 0,\n        animated: true\n      });\n    }\n\n    // Logique pour charger les compétitions\n    let storedCompetitions = await fetchCompetitionsForClub(club.cl_no);\n    setCompetitionNames(storedCompetitions);\n  };\n  const handleCompetitionClick = competitionName => {\n    onCompetitionSelected(competitionName);\n\n    // Faire défiler jusqu'en haut\n    if (scrollViewRef.current) {\n      scrollViewRef.current.scrollTo({\n        y: 0,\n        animated: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ScrollView, {\n    ref: scrollViewRef,\n    children: /*#__PURE__*/_jsxDEV(View, {\n      children: [/*#__PURE__*/_jsxDEV(TextInput, {\n        value: searchTerm,\n        onChangeText: text => setSearchTerm(text),\n        placeholder: \"Rechercher un club\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: \"S\\xE9lectionner un club\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), clubs.map(club => /*#__PURE__*/_jsxDEV(TouchableOpacity, {\n          onPress: () => handleClubClick(club),\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            style: {\n              color: club.name === selectedClubName ? 'blue' : 'black'\n            },\n            children: club.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, club.cl_no, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), selectedClub && /*#__PURE__*/_jsxDEV(View, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: \"S\\xE9lectionner une \\xE9quipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), competitionNames.map((name, index) => /*#__PURE__*/_jsxDEV(TouchableOpacity, {\n          onPress: () => handleCompetitionClick(name),\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            style: {\n              color: name === selectedCompetition ? 'blue' : 'black'\n            },\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchClub, \"QaOHbwbqrKAgF5oL8npCx5iM1bQ=\");\n_c = SearchClub;\nexport default SearchClub;\nvar _c;\n$RefreshReg$(_c, \"SearchClub\");","map":{"version":3,"names":["React","useState","useEffect","useRef","View","TextInput","Text","TouchableOpacity","ScrollView","jsxDEV","_jsxDEV","SearchClub","selectedClub","selectedCompetition","onSelectClub","onCompetitionSelected","_s","searchTerm","setSearchTerm","clubs","setClubs","recentClubs","setRecentClubs","competitionNames","setCompetitionNames","selectedClubName","setSelectedClubName","scrollViewRef","savedRecentClubs","JSON","parse","localStorage","getItem","handleClubClick","club","name","current","scrollTo","y","animated","storedCompetitions","fetchCompetitionsForClub","cl_no","handleCompetitionClick","competitionName","ref","children","value","onChangeText","text","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","onPress","style","color","index","_c","$RefreshReg$"],"sources":["C:/perso/IA Sport Vision/Application/IASV/src/components/Explore/SearchClub.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { View, TextInput, Text, TouchableOpacity, ScrollView } from 'react-native';\r\n\r\nconst SearchClub = ({ selectedClub, selectedCompetition, onSelectClub, onCompetitionSelected }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [clubs, setClubs] = useState([]);\r\n  const [recentClubs, setRecentClubs] = useState([]);\r\n  const [competitionNames, setCompetitionNames] = useState([]);\r\n  const [selectedClubName, setSelectedClubName] = useState(null);\r\n\r\n  const scrollViewRef = useRef(null); // Référence à ScrollView\r\n\r\n  useEffect(() => {\r\n    // Charger les clubs récents depuis le stockage local (ou une autre source)\r\n    const savedRecentClubs = JSON.parse(localStorage.getItem('recentClubs')) || [];\r\n    setRecentClubs(savedRecentClubs);\r\n  }, []);\r\n\r\n  const handleClubClick = async (club) => {\r\n    setSearchTerm('');\r\n    setSelectedClubName(club.name);\r\n    onSelectClub(club);\r\n\r\n    // Faire défiler jusqu'en haut\r\n    if (scrollViewRef.current) {\r\n      scrollViewRef.current.scrollTo({ y: 0, animated: true });\r\n    }\r\n\r\n    // Logique pour charger les compétitions\r\n    let storedCompetitions = await fetchCompetitionsForClub(club.cl_no);\r\n    setCompetitionNames(storedCompetitions);\r\n  };\r\n\r\n  const handleCompetitionClick = (competitionName) => {\r\n    onCompetitionSelected(competitionName);\r\n\r\n    // Faire défiler jusqu'en haut\r\n    if (scrollViewRef.current) {\r\n      scrollViewRef.current.scrollTo({ y: 0, animated: true });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView ref={scrollViewRef}>\r\n      <View>\r\n        <TextInput\r\n          value={searchTerm}\r\n          onChangeText={(text) => setSearchTerm(text)}\r\n          placeholder=\"Rechercher un club\"\r\n        />\r\n        <View>\r\n          <Text>Sélectionner un club</Text>\r\n          {clubs.map((club) => (\r\n            <TouchableOpacity key={club.cl_no} onPress={() => handleClubClick(club)}>\r\n              <Text style={{ color: club.name === selectedClubName ? 'blue' : 'black' }}>\r\n                {club.name}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n        \r\n        {selectedClub && (\r\n          <View>\r\n            <Text>Sélectionner une équipe</Text>\r\n            {competitionNames.map((name, index) => (\r\n              <TouchableOpacity key={index} onPress={() => handleCompetitionClick(name)}>\r\n                <Text style={{ color: name === selectedCompetition ? 'blue' : 'black' }}>\r\n                  {name}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            ))}\r\n          </View>\r\n        )}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default SearchClub;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,IAAI,EAAEC,SAAS,EAAEC,IAAI,EAAEC,gBAAgB,EAAEC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnF,MAAMC,UAAU,GAAGA,CAAC;EAAEC,YAAY;EAAEC,mBAAmB;EAAEC,YAAY;EAAEC;AAAsB,CAAC,KAAK;EAAAC,EAAA;EACjG,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACsB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACwB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAE9D,MAAM0B,aAAa,GAAGxB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEpCD,SAAS,CAAC,MAAM;IACd;IACA,MAAM0B,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC,IAAI,EAAE;IAC9EV,cAAc,CAACM,gBAAgB,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,eAAe,GAAG,MAAOC,IAAI,IAAK;IACtChB,aAAa,CAAC,EAAE,CAAC;IACjBQ,mBAAmB,CAACQ,IAAI,CAACC,IAAI,CAAC;IAC9BrB,YAAY,CAACoB,IAAI,CAAC;;IAElB;IACA,IAAIP,aAAa,CAACS,OAAO,EAAE;MACzBT,aAAa,CAACS,OAAO,CAACC,QAAQ,CAAC;QAAEC,CAAC,EAAE,CAAC;QAAEC,QAAQ,EAAE;MAAK,CAAC,CAAC;IAC1D;;IAEA;IACA,IAAIC,kBAAkB,GAAG,MAAMC,wBAAwB,CAACP,IAAI,CAACQ,KAAK,CAAC;IACnElB,mBAAmB,CAACgB,kBAAkB,CAAC;EACzC,CAAC;EAED,MAAMG,sBAAsB,GAAIC,eAAe,IAAK;IAClD7B,qBAAqB,CAAC6B,eAAe,CAAC;;IAEtC;IACA,IAAIjB,aAAa,CAACS,OAAO,EAAE;MACzBT,aAAa,CAACS,OAAO,CAACC,QAAQ,CAAC;QAAEC,CAAC,EAAE,CAAC;QAAEC,QAAQ,EAAE;MAAK,CAAC,CAAC;IAC1D;EACF,CAAC;EAED,oBACE7B,OAAA,CAACF,UAAU;IAACqC,GAAG,EAAElB,aAAc;IAAAmB,QAAA,eAC7BpC,OAAA,CAACN,IAAI;MAAA0C,QAAA,gBACHpC,OAAA,CAACL,SAAS;QACR0C,KAAK,EAAE9B,UAAW;QAClB+B,YAAY,EAAGC,IAAI,IAAK/B,aAAa,CAAC+B,IAAI,CAAE;QAC5CC,WAAW,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eACF5C,OAAA,CAACN,IAAI;QAAA0C,QAAA,gBACHpC,OAAA,CAACJ,IAAI;UAAAwC,QAAA,EAAC;QAAoB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAChCnC,KAAK,CAACoC,GAAG,CAAErB,IAAI,iBACdxB,OAAA,CAACH,gBAAgB;UAAkBiD,OAAO,EAAEA,CAAA,KAAMvB,eAAe,CAACC,IAAI,CAAE;UAAAY,QAAA,eACtEpC,OAAA,CAACJ,IAAI;YAACmD,KAAK,EAAE;cAAEC,KAAK,EAAExB,IAAI,CAACC,IAAI,KAAKV,gBAAgB,GAAG,MAAM,GAAG;YAAQ,CAAE;YAAAqB,QAAA,EACvEZ,IAAI,CAACC;UAAI;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN;QAAC,GAHcpB,IAAI,CAACQ,KAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIf,CACnB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAEN1C,YAAY,iBACXF,OAAA,CAACN,IAAI;QAAA0C,QAAA,gBACHpC,OAAA,CAACJ,IAAI;UAAAwC,QAAA,EAAC;QAAuB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EACnC/B,gBAAgB,CAACgC,GAAG,CAAC,CAACpB,IAAI,EAAEwB,KAAK,kBAChCjD,OAAA,CAACH,gBAAgB;UAAaiD,OAAO,EAAEA,CAAA,KAAMb,sBAAsB,CAACR,IAAI,CAAE;UAAAW,QAAA,eACxEpC,OAAA,CAACJ,IAAI;YAACmD,KAAK,EAAE;cAAEC,KAAK,EAAEvB,IAAI,KAAKtB,mBAAmB,GAAG,MAAM,GAAG;YAAQ,CAAE;YAAAiC,QAAA,EACrEX;UAAI;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD;QAAC,GAHcK,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CACnB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACP;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEjB,CAAC;AAACtC,EAAA,CAzEIL,UAAU;AAAAiD,EAAA,GAAVjD,UAAU;AA2EhB,eAAeA,UAAU;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
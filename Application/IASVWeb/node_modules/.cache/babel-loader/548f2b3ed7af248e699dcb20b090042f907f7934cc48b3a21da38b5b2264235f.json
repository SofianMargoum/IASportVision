{"ast":null,"code":"// api.js\n\n// Fonction pour envoyer l'idToken au backend pour vérification\nexport const sendIdTokenToBackend = async idToken => {\n  try {\n    const response = await fetch('https://ia-sport.oa.r.appspot.com/api/google', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        idToken\n      }) // Envoie le idToken au backend\n    });\n    if (!response.ok) {\n      throw new Error('Échec de la vérification du token');\n    }\n    const data = await response.json();\n    return data; // Réponse avec les informations de l'utilisateur\n  } catch (error) {\n    console.error('Error verifying Google token:', error);\n    throw error;\n  }\n};\n\n// Fonction pour rechercher des clubs\nexport const searchClubs = async searchTerm => {\n  try {\n    const response = await fetch(`https://api-dofa.prd-aws.fff.fr/api/clubs?clNom=${searchTerm}`);\n    const data = await response.json();\n    return data['hydra:member'].map(club => ({\n      name: club.name,\n      logo: club.logo,\n      cl_no: club.cl_no\n    }));\n  } catch (error) {\n    console.error('Error fetching clubs:', error);\n    return [];\n  }\n};\n\n// Fonction pour démarrer l'enregistrement\nexport const startRecording = async () => {\n  try {\n    const response = await fetch('https://ia-sport.oa.r.appspot.com/api/start-recording', {\n      method: 'PUT'\n    });\n    if (!response.ok) {\n      throw new Error('Échec du démarrage de l\\'enregistrement');\n    }\n    return response;\n  } catch (error) {\n    console.error('Error starting recording:', error);\n    throw error;\n  }\n};\n\n// Fonction pour arrêter l'enregistrement\nexport const stopRecording = async () => {\n  try {\n    const response = await fetch('https://ia-sport.oa.r.appspot.com/api/stop-recording', {\n      method: 'PUT'\n    });\n    if (!response.ok) {\n      throw new Error('Échec de l\\'arrêt de l\\'enregistrement');\n    }\n    return response;\n  } catch (error) {\n    console.error('Error stopping recording:', error);\n    throw error;\n  }\n};\n\n// Fonction pour récupérer l'URI de lecture et la durée de la vidéo\nexport const getPlaybackURI = async () => {\n  try {\n    const response = await fetch('https://ia-sport.oa.r.appspot.com/api/search', {\n      method: 'GET'\n    });\n    if (!response.ok) {\n      throw new Error('Échec de la récupération de l\\'URI de lecture');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching playback URI:', error);\n    throw error;\n  }\n};\n\n// Fonction pour télécharger la vidéo\nexport const uploadVideo = async (filename, playbackURI, directory, duration) => {\n  try {\n    const response = await fetch('https://ia-sport.oa.r.appspot.com/api/upload', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        filename: directory + `${filename}.mp4`,\n        cameraRtspUrl: playbackURI,\n        directory: directory,\n        duration: duration\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Échec du téléchargement de la vidéo');\n    }\n    return response;\n  } catch (error) {\n    console.error('Error uploading video:', error);\n    throw error;\n  }\n};\nexport const fetchCompetitionsForClub = async cl_no => {\n  try {\n    const response = await fetch(`https://api-dofa.prd-aws.fff.fr/api/clubs/${cl_no}/equipes`);\n    const data = await response.json();\n\n    // Extraire les noms des compétitions dont le type est \"CH\"\n    const competitionNames = data['hydra:member'].flatMap(team => team.engagements.filter(engagement => engagement.competition.type === \"CH\").map(engagement => engagement.competition.name));\n    return competitionNames;\n  } catch (error) {\n    console.error('Error fetching competitions:', error);\n    return [];\n  }\n};\nexport const fetchMatchesForClub = async cl_no => {\n  try {\n    const response = await fetch(`https://api-dofa.prd-aws.fff.fr/api/clubs/${cl_no}/matchs`);\n    if (!response.ok) {\n      throw new Error('Échec de la récupération des matchs');\n    }\n    const data = await response.json();\n    return data['hydra:member'].filter(match => match.away && match.away.short_name && match.home && match.home.short_name).map(match => {\n      var homeCompetitionName = '';\n      var awayCompetitionName = '';\n      if (match.home && match.home.engagements) {\n        for (let i = 0; i < match.home.engagements.length; i++) {\n          homeCompetitionName = match.home.engagements[i].competition.type === 'CH' ? match.home.engagements[i].competition.name : homeCompetitionName;\n        }\n      }\n      if (match.away && match.away.engagements) {\n        for (let i = 0; i < match.away.engagements.length; i++) {\n          awayCompetitionName = match.away.engagements[i].competition.type === 'CH' ? match.away.engagements[i].competition.name : awayCompetitionName;\n        }\n      }\n      var competitionName = match.competition ? match.competition.name : '';\n      var competitionNumber = match.competition ? match.competition.cp_no : '';\n      var phaseNumber = match.phase ? match.phase.number : '';\n      var pouleNumber = match.poule ? match.poule.stage_number : '';\n      return {\n        id: match['@id'].split('/').pop(),\n        // Extraction de l'ID depuis l'URL\n        date: match.date,\n        time: match.time,\n        home_score: match.home_score,\n        away_score: match.away_score,\n        season: match.competition.season,\n        // Ajout de la saison\n        homeTeam: match.home && match.home.short_name ? match.home.short_name : '',\n        // Vérifie l'existence\n        awayTeam: match.away && match.away.short_name ? match.away.short_name : '',\n        // Vérifie l'existence\n        homeLogo: match.home && match.home.club.logo ? match.home.club.logo : '',\n        // Vérifie l'existence\n        awayLogo: match.away && match.away.club.logo ? match.away.club.logo : '',\n        // Vérifie l'existence\n        competitionName,\n        // Ajout du nom de la compétition de l'équipe à domicile\n        competitionNumber,\n        phaseNumber,\n        pouleNumber,\n        homeCompetitionName,\n        // Ajout du nom de la compétition de l'équipe à domicile\n        awayCompetitionName // Ajout du nom de la compétition de l'équipe à l'extérieur\n      };\n    });\n  } catch (error) {\n    console.error('Error fetching matches:', error);\n    return [];\n  }\n};\n\n// Fonction pour récupérer le classement des journées pour une poule spécifique\nexport const fetchClassementJournees = async (competitionId, phaseId, pouleId) => {\n  try {\n    const response = await fetch(`https://api-dofa.prd-aws.fff.fr/api/compets/${competitionId}/phases/${phaseId}/poules/${pouleId}/classement_journees`);\n    if (!response.ok) {\n      throw new Error('Échec de la récupération du classement des journées');\n    }\n    const data = await response.json();\n    return data['hydra:member'].map(journee => ({\n      journeeNumber: journee.cj_no,\n      season: journee.season,\n      date: journee.date,\n      rank: journee.rank,\n      points: journee.point_count,\n      penaltyPoints: journee.penalty_point_count,\n      wonGames: journee.won_games_count,\n      drawGames: journee.draw_games_count,\n      lostGames: journee.lost_games_count,\n      forfeits: journee.forfeits_games_count,\n      goalsFor: journee.goals_for_count,\n      goalsAgainst: journee.goals_against_count,\n      goalDifference: journee.goals_diff,\n      totalGames: journee.total_games_count,\n      teamName: journee.equipe.short_name,\n      teamCategory: journee.equipe.category_label,\n      teamGender: journee.equipe.category_gender,\n      pouleName: journee.poule.name,\n      stageNumber: journee.poule.stage_number\n    }));\n  } catch (error) {\n    console.error('Error fetching classement journées:', error);\n    return [];\n  }\n};","map":{"version":3,"names":["sendIdTokenToBackend","idToken","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","console","searchClubs","searchTerm","map","club","name","logo","cl_no","startRecording","stopRecording","getPlaybackURI","uploadVideo","filename","playbackURI","directory","duration","cameraRtspUrl","fetchCompetitionsForClub","competitionNames","flatMap","team","engagements","filter","engagement","competition","type","fetchMatchesForClub","match","away","short_name","home","homeCompetitionName","awayCompetitionName","i","length","competitionName","competitionNumber","cp_no","phaseNumber","phase","number","pouleNumber","poule","stage_number","id","split","pop","date","time","home_score","away_score","season","homeTeam","awayTeam","homeLogo","awayLogo","fetchClassementJournees","competitionId","phaseId","pouleId","journee","journeeNumber","cj_no","rank","points","point_count","penaltyPoints","penalty_point_count","wonGames","won_games_count","drawGames","draw_games_count","lostGames","lost_games_count","forfeits","forfeits_games_count","goalsFor","goals_for_count","goalsAgainst","goals_against_count","goalDifference","goals_diff","totalGames","total_games_count","teamName","equipe","teamCategory","category_label","teamGender","category_gender","pouleName","stageNumber"],"sources":["C:/perso/IA Sport Vision/Application/IASV/src/components/api.js"],"sourcesContent":["// api.js\r\n\r\n// Fonction pour envoyer l'idToken au backend pour vérification\r\nexport const sendIdTokenToBackend = async (idToken) => {\r\n  try {\r\n    const response = await fetch('https://ia-sport.oa.r.appspot.com/api/google', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ idToken }), // Envoie le idToken au backend\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Échec de la vérification du token');\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data; // Réponse avec les informations de l'utilisateur\r\n  } catch (error) {\r\n    console.error('Error verifying Google token:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fonction pour rechercher des clubs\r\nexport const searchClubs = async (searchTerm) => {\r\n  try {\r\n    const response = await fetch(`https://api-dofa.prd-aws.fff.fr/api/clubs?clNom=${searchTerm}`);\r\n    const data = await response.json();\r\n    return data['hydra:member'].map(club => ({\r\n      name: club.name,\r\n      logo: club.logo,\r\n      cl_no: club.cl_no,\r\n    }));\r\n  } catch (error) {\r\n    console.error('Error fetching clubs:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n\r\n// Fonction pour démarrer l'enregistrement\r\nexport const startRecording = async () => {\r\n  try {\r\n    const response = await fetch('https://ia-sport.oa.r.appspot.com/api/start-recording', {\r\n      method: 'PUT'\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Échec du démarrage de l\\'enregistrement');\r\n    }\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Error starting recording:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fonction pour arrêter l'enregistrement\r\nexport const stopRecording = async () => {\r\n  try {\r\n    const response = await fetch('https://ia-sport.oa.r.appspot.com/api/stop-recording', {\r\n      method: 'PUT'\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Échec de l\\'arrêt de l\\'enregistrement');\r\n    }\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Error stopping recording:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fonction pour récupérer l'URI de lecture et la durée de la vidéo\r\nexport const getPlaybackURI = async () => {\r\n  try {\r\n    const response = await fetch('https://ia-sport.oa.r.appspot.com/api/search', {\r\n      method: 'GET'\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Échec de la récupération de l\\'URI de lecture');\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching playback URI:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fonction pour télécharger la vidéo\r\nexport const uploadVideo = async (filename, playbackURI, directory, duration) => {\r\n  try {\r\n    const response = await fetch('https://ia-sport.oa.r.appspot.com/api/upload', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        filename: directory + `${filename}.mp4`,\r\n        cameraRtspUrl: playbackURI,\r\n        directory: directory,\r\n        duration: duration,\r\n      }),\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Échec du téléchargement de la vidéo');\r\n    }\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Error uploading video:', error);\r\n    throw error;\r\n  }\r\n};\r\nexport const fetchCompetitionsForClub = async (cl_no) => {\r\n  try {\r\n    const response = await fetch(`https://api-dofa.prd-aws.fff.fr/api/clubs/${cl_no}/equipes`);\r\n    const data = await response.json();\r\n\r\n    // Extraire les noms des compétitions dont le type est \"CH\"\r\n    const competitionNames = data['hydra:member'].flatMap(team =>\r\n      team.engagements\r\n        .filter(engagement => engagement.competition.type === \"CH\")\r\n        .map(engagement => engagement.competition.name)\r\n    );\r\n\r\n    return competitionNames;\r\n  } catch (error) {\r\n    console.error('Error fetching competitions:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchMatchesForClub = async (cl_no) => {\r\n  try {\r\n    const response = await fetch(`https://api-dofa.prd-aws.fff.fr/api/clubs/${cl_no}/matchs`);\r\n    if (!response.ok) {\r\n      throw new Error('Échec de la récupération des matchs');\r\n    }\r\n    const data = await response.json();\r\n\r\n    return data['hydra:member']\r\n      .filter(match => \r\n        ( match.away && match.away.short_name && match.home && match.home.short_name)\r\n      )\r\n      .map(match => {\r\n        var homeCompetitionName = '';\r\n        var awayCompetitionName = '';\r\n         \r\n          if(match.home && match.home.engagements ){\r\n            for(let i = 0 ; i < match.home.engagements.length ; i++){\r\n              homeCompetitionName = match.home.engagements[i].competition.type === 'CH' ? match.home.engagements[i].competition.name : homeCompetitionName;\r\n            } \r\n          }\r\n          if(match.away && match.away.engagements){                  \r\n            for(let i = 0 ; i < match.away.engagements.length ;i++){\r\n              awayCompetitionName = match.away.engagements[i].competition.type === 'CH' ? match.away.engagements[i].competition.name : awayCompetitionName;\r\n            }\r\n          }\r\n          var competitionName = match.competition  ? match.competition.name :'';\r\n          var competitionNumber = match.competition  ? match.competition.cp_no :'';\r\n          var phaseNumber = match.phase  ? match.phase.number :'';\r\n          var pouleNumber = match.poule  ? match.poule.stage_number :'';\r\n        return {\r\n          id: match['@id'].split('/').pop(), // Extraction de l'ID depuis l'URL\r\n          date: match.date,\r\n          time: match.time,\r\n          home_score: match.home_score,\r\n          away_score: match.away_score,\r\n          season: match.competition.season, // Ajout de la saison\r\n          homeTeam: match.home && match.home.short_name ? match.home.short_name : '', // Vérifie l'existence\r\n          awayTeam: match.away && match.away.short_name ? match.away.short_name : '', // Vérifie l'existence\r\n          homeLogo: match.home && match.home.club.logo ? match.home.club.logo : '', // Vérifie l'existence\r\n          awayLogo: match.away && match.away.club.logo ? match.away.club.logo : '', // Vérifie l'existence\r\n          competitionName, // Ajout du nom de la compétition de l'équipe à domicile\r\n          competitionNumber,\r\n          phaseNumber,\r\n          pouleNumber,\r\n          homeCompetitionName, // Ajout du nom de la compétition de l'équipe à domicile\r\n          awayCompetitionName, // Ajout du nom de la compétition de l'équipe à l'extérieur\r\n        };\r\n      });\r\n  } catch (error) {\r\n    console.error('Error fetching matches:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n\r\n// Fonction pour récupérer le classement des journées pour une poule spécifique\r\nexport const fetchClassementJournees = async (competitionId, phaseId, pouleId) => {\r\n  try {\r\n    const response = await fetch(`https://api-dofa.prd-aws.fff.fr/api/compets/${competitionId}/phases/${phaseId}/poules/${pouleId}/classement_journees`);\r\n    if (!response.ok) {\r\n      throw new Error('Échec de la récupération du classement des journées');\r\n    }\r\n    const data = await response.json();\r\n\r\n    return data['hydra:member'].map(journee => ({\r\n      journeeNumber: journee.cj_no,\r\n      season: journee.season,\r\n      date: journee.date,\r\n      rank: journee.rank,\r\n      points: journee.point_count,\r\n      penaltyPoints: journee.penalty_point_count,\r\n      wonGames: journee.won_games_count,\r\n      drawGames: journee.draw_games_count,\r\n      lostGames: journee.lost_games_count,\r\n      forfeits: journee.forfeits_games_count,\r\n      goalsFor: journee.goals_for_count,\r\n      goalsAgainst: journee.goals_against_count,\r\n      goalDifference: journee.goals_diff,\r\n      totalGames: journee.total_games_count,\r\n      teamName: journee.equipe.short_name,\r\n      teamCategory: journee.equipe.category_label,\r\n      teamGender: journee.equipe.category_gender,\r\n      pouleName: journee.poule.name,\r\n      stageNumber: journee.poule.stage_number,\r\n    }));\r\n  } catch (error) {\r\n    console.error('Error fetching classement journées:', error);\r\n    return [];\r\n  }\r\n};\r\n"],"mappings":"AAAA;;AAEA;AACA,OAAO,MAAMA,oBAAoB,GAAG,MAAOC,OAAO,IAAK;EACrD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;MAC3EC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP;MAAQ,CAAC,CAAC,CAAE;IACrC,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;IACtD;IAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAAC,CAAC;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,WAAW,GAAG,MAAOC,UAAU,IAAK;EAC/C,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAmDa,UAAU,EAAE,CAAC;IAC7F,MAAML,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAAC,cAAc,CAAC,CAACM,GAAG,CAACC,IAAI,KAAK;MACvCC,IAAI,EAAED,IAAI,CAACC,IAAI;MACfC,IAAI,EAAEF,IAAI,CAACE,IAAI;MACfC,KAAK,EAAEH,IAAI,CAACG;IACd,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,OAAOR,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,OAAO,EAAE;EACX;AACF,CAAC;;AAGD;AACA,OAAO,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAuD,EAAE;MACpFC,MAAM,EAAE;IACV,CAAC,CAAC;IACF,IAAI,CAACF,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,yCAAyC,CAAC;IAC5D;IACA,OAAOR,QAAQ;EACjB,CAAC,CAAC,OAAOW,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMrB,QAAQ,GAAG,MAAMC,KAAK,CAAC,sDAAsD,EAAE;MACnFC,MAAM,EAAE;IACV,CAAC,CAAC;IACF,IAAI,CAACF,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,wCAAwC,CAAC;IAC3D;IACA,OAAOR,QAAQ;EACjB,CAAC,CAAC,OAAOW,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMtB,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;MAC3EC,MAAM,EAAE;IACV,CAAC,CAAC;IACF,IAAI,CAACF,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;IAClE;IACA,OAAO,MAAMR,QAAQ,CAACU,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMY,WAAW,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,KAAK;EAC/E,IAAI;IACF,MAAM3B,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;MAC3EC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBkB,QAAQ,EAAEE,SAAS,GAAG,GAAGF,QAAQ,MAAM;QACvCI,aAAa,EAAEH,WAAW;QAC1BC,SAAS,EAAEA,SAAS;QACpBC,QAAQ,EAAEA;MACZ,CAAC;IACH,CAAC,CAAC;IACF,IAAI,CAAC3B,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;IACxD;IACA,OAAOR,QAAQ;EACjB,CAAC,CAAC,OAAOW,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC;AACD,OAAO,MAAMkB,wBAAwB,GAAG,MAAOV,KAAK,IAAK;EACvD,IAAI;IACF,MAAMnB,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6CkB,KAAK,UAAU,CAAC;IAC1F,MAAMV,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;;IAElC;IACA,MAAMoB,gBAAgB,GAAGrB,IAAI,CAAC,cAAc,CAAC,CAACsB,OAAO,CAACC,IAAI,IACxDA,IAAI,CAACC,WAAW,CACbC,MAAM,CAACC,UAAU,IAAIA,UAAU,CAACC,WAAW,CAACC,IAAI,KAAK,IAAI,CAAC,CAC1DtB,GAAG,CAACoB,UAAU,IAAIA,UAAU,CAACC,WAAW,CAACnB,IAAI,CAClD,CAAC;IAED,OAAOa,gBAAgB;EACzB,CAAC,CAAC,OAAOnB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,OAAO,EAAE;EACX;AACF,CAAC;AAED,OAAO,MAAM2B,mBAAmB,GAAG,MAAOnB,KAAK,IAAK;EAClD,IAAI;IACF,MAAMnB,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6CkB,KAAK,SAAS,CAAC;IACzF,IAAI,CAACnB,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;IACxD;IACA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAElC,OAAOD,IAAI,CAAC,cAAc,CAAC,CACxByB,MAAM,CAACK,KAAK,IACTA,KAAK,CAACC,IAAI,IAAID,KAAK,CAACC,IAAI,CAACC,UAAU,IAAIF,KAAK,CAACG,IAAI,IAAIH,KAAK,CAACG,IAAI,CAACD,UACpE,CAAC,CACA1B,GAAG,CAACwB,KAAK,IAAI;MACZ,IAAII,mBAAmB,GAAG,EAAE;MAC5B,IAAIC,mBAAmB,GAAG,EAAE;MAE1B,IAAGL,KAAK,CAACG,IAAI,IAAIH,KAAK,CAACG,IAAI,CAACT,WAAW,EAAE;QACvC,KAAI,IAAIY,CAAC,GAAG,CAAC,EAAGA,CAAC,GAAGN,KAAK,CAACG,IAAI,CAACT,WAAW,CAACa,MAAM,EAAGD,CAAC,EAAE,EAAC;UACtDF,mBAAmB,GAAGJ,KAAK,CAACG,IAAI,CAACT,WAAW,CAACY,CAAC,CAAC,CAACT,WAAW,CAACC,IAAI,KAAK,IAAI,GAAGE,KAAK,CAACG,IAAI,CAACT,WAAW,CAACY,CAAC,CAAC,CAACT,WAAW,CAACnB,IAAI,GAAG0B,mBAAmB;QAC9I;MACF;MACA,IAAGJ,KAAK,CAACC,IAAI,IAAID,KAAK,CAACC,IAAI,CAACP,WAAW,EAAC;QACtC,KAAI,IAAIY,CAAC,GAAG,CAAC,EAAGA,CAAC,GAAGN,KAAK,CAACC,IAAI,CAACP,WAAW,CAACa,MAAM,EAAED,CAAC,EAAE,EAAC;UACrDD,mBAAmB,GAAGL,KAAK,CAACC,IAAI,CAACP,WAAW,CAACY,CAAC,CAAC,CAACT,WAAW,CAACC,IAAI,KAAK,IAAI,GAAGE,KAAK,CAACC,IAAI,CAACP,WAAW,CAACY,CAAC,CAAC,CAACT,WAAW,CAACnB,IAAI,GAAG2B,mBAAmB;QAC9I;MACF;MACA,IAAIG,eAAe,GAAGR,KAAK,CAACH,WAAW,GAAIG,KAAK,CAACH,WAAW,CAACnB,IAAI,GAAE,EAAE;MACrE,IAAI+B,iBAAiB,GAAGT,KAAK,CAACH,WAAW,GAAIG,KAAK,CAACH,WAAW,CAACa,KAAK,GAAE,EAAE;MACxE,IAAIC,WAAW,GAAGX,KAAK,CAACY,KAAK,GAAIZ,KAAK,CAACY,KAAK,CAACC,MAAM,GAAE,EAAE;MACvD,IAAIC,WAAW,GAAGd,KAAK,CAACe,KAAK,GAAIf,KAAK,CAACe,KAAK,CAACC,YAAY,GAAE,EAAE;MAC/D,OAAO;QACLC,EAAE,EAAEjB,KAAK,CAAC,KAAK,CAAC,CAACkB,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;QAAE;QACnCC,IAAI,EAAEpB,KAAK,CAACoB,IAAI;QAChBC,IAAI,EAAErB,KAAK,CAACqB,IAAI;QAChBC,UAAU,EAAEtB,KAAK,CAACsB,UAAU;QAC5BC,UAAU,EAAEvB,KAAK,CAACuB,UAAU;QAC5BC,MAAM,EAAExB,KAAK,CAACH,WAAW,CAAC2B,MAAM;QAAE;QAClCC,QAAQ,EAAEzB,KAAK,CAACG,IAAI,IAAIH,KAAK,CAACG,IAAI,CAACD,UAAU,GAAGF,KAAK,CAACG,IAAI,CAACD,UAAU,GAAG,EAAE;QAAE;QAC5EwB,QAAQ,EAAE1B,KAAK,CAACC,IAAI,IAAID,KAAK,CAACC,IAAI,CAACC,UAAU,GAAGF,KAAK,CAACC,IAAI,CAACC,UAAU,GAAG,EAAE;QAAE;QAC5EyB,QAAQ,EAAE3B,KAAK,CAACG,IAAI,IAAIH,KAAK,CAACG,IAAI,CAAC1B,IAAI,CAACE,IAAI,GAAGqB,KAAK,CAACG,IAAI,CAAC1B,IAAI,CAACE,IAAI,GAAG,EAAE;QAAE;QAC1EiD,QAAQ,EAAE5B,KAAK,CAACC,IAAI,IAAID,KAAK,CAACC,IAAI,CAACxB,IAAI,CAACE,IAAI,GAAGqB,KAAK,CAACC,IAAI,CAACxB,IAAI,CAACE,IAAI,GAAG,EAAE;QAAE;QAC1E6B,eAAe;QAAE;QACjBC,iBAAiB;QACjBE,WAAW;QACXG,WAAW;QACXV,mBAAmB;QAAE;QACrBC,mBAAmB,CAAE;MACvB,CAAC;IACH,CAAC,CAAC;EACN,CAAC,CAAC,OAAOjC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO,EAAE;EACX;AACF,CAAC;;AAGD;AACA,OAAO,MAAMyD,uBAAuB,GAAG,MAAAA,CAAOC,aAAa,EAAEC,OAAO,EAAEC,OAAO,KAAK;EAChF,IAAI;IACF,MAAMvE,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+CoE,aAAa,WAAWC,OAAO,WAAWC,OAAO,sBAAsB,CAAC;IACpJ,IAAI,CAACvE,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,qDAAqD,CAAC;IACxE;IACA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAElC,OAAOD,IAAI,CAAC,cAAc,CAAC,CAACM,GAAG,CAACyD,OAAO,KAAK;MAC1CC,aAAa,EAAED,OAAO,CAACE,KAAK;MAC5BX,MAAM,EAAES,OAAO,CAACT,MAAM;MACtBJ,IAAI,EAAEa,OAAO,CAACb,IAAI;MAClBgB,IAAI,EAAEH,OAAO,CAACG,IAAI;MAClBC,MAAM,EAAEJ,OAAO,CAACK,WAAW;MAC3BC,aAAa,EAAEN,OAAO,CAACO,mBAAmB;MAC1CC,QAAQ,EAAER,OAAO,CAACS,eAAe;MACjCC,SAAS,EAAEV,OAAO,CAACW,gBAAgB;MACnCC,SAAS,EAAEZ,OAAO,CAACa,gBAAgB;MACnCC,QAAQ,EAAEd,OAAO,CAACe,oBAAoB;MACtCC,QAAQ,EAAEhB,OAAO,CAACiB,eAAe;MACjCC,YAAY,EAAElB,OAAO,CAACmB,mBAAmB;MACzCC,cAAc,EAAEpB,OAAO,CAACqB,UAAU;MAClCC,UAAU,EAAEtB,OAAO,CAACuB,iBAAiB;MACrCC,QAAQ,EAAExB,OAAO,CAACyB,MAAM,CAACxD,UAAU;MACnCyD,YAAY,EAAE1B,OAAO,CAACyB,MAAM,CAACE,cAAc;MAC3CC,UAAU,EAAE5B,OAAO,CAACyB,MAAM,CAACI,eAAe;MAC1CC,SAAS,EAAE9B,OAAO,CAAClB,KAAK,CAACrC,IAAI;MAC7BsF,WAAW,EAAE/B,OAAO,CAAClB,KAAK,CAACC;IAC7B,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,OAAO5C,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC3D,OAAO,EAAE;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
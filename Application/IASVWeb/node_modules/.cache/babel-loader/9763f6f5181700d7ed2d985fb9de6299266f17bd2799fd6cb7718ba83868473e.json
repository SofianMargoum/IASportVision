{"ast":null,"code":"var _jsxFileName = \"C:\\\\perso\\\\IA Sport Vision\\\\Application\\\\IASV\\\\src\\\\GoogleSignIn.js\";\n// GoogleSignIn.js\n\nimport React from 'react';\nimport { Button, Alert } from 'react-native';\nimport { GoogleSignin, statusCodes } from '@react-native-google-signin/google-signin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nGoogleSignin.configure({\n  webClientId: '417232013163-v2genb8j1f3odhrjt40hm9fsghgodgrl.apps.googleusercontent.com',\n  // Remplacez par votre ID client Web\n  offlineAccess: true\n});\nconst GoogleSignInButton = () => {\n  const signIn = async () => {\n    try {\n      await GoogleSignin.hasPlayServices();\n      const userInfo = await GoogleSignin.signIn();\n      console.log(userInfo);\n\n      // Envoyer le token au backend pour vérification\n      const response = await fetch('https://api-dofa.prd-aws.fff.fr/api/auth/google', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          idToken: userInfo.idToken\n        })\n      });\n      const data = await response.json();\n      console.log('Backend response:', data);\n    } catch (error) {\n      if (error.code === statusCodes.SIGN_IN_CANCELLED) {\n        Alert.alert('Sign-In Cancelled');\n      } else if (error.code === statusCodes.IN_PROGRESS) {\n        Alert.alert('Sign-In In Progress');\n      } else if (error.code === statusCodes.PLAY_SERVICES_NOT_AVAILABLE) {\n        Alert.alert('Play Services Not Available');\n      } else {\n        Alert.alert('Sign-In Error', error.message);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    title: \"Sign in with Google\",\n    onPress: signIn\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c = GoogleSignInButton;\nexport default GoogleSignInButton;\nvar _c;\n$RefreshReg$(_c, \"GoogleSignInButton\");","map":{"version":3,"names":["React","Button","Alert","GoogleSignin","statusCodes","jsxDEV","_jsxDEV","configure","webClientId","offlineAccess","GoogleSignInButton","signIn","hasPlayServices","userInfo","console","log","response","fetch","method","headers","body","JSON","stringify","idToken","data","json","error","code","SIGN_IN_CANCELLED","alert","IN_PROGRESS","PLAY_SERVICES_NOT_AVAILABLE","message","title","onPress","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/perso/IA Sport Vision/Application/IASV/src/GoogleSignIn.js"],"sourcesContent":["// GoogleSignIn.js\r\n\r\nimport React from 'react';\r\nimport { Button, Alert } from 'react-native';\r\nimport { GoogleSignin, statusCodes } from '@react-native-google-signin/google-signin';\r\n\r\nGoogleSignin.configure({\r\n  webClientId: '417232013163-v2genb8j1f3odhrjt40hm9fsghgodgrl.apps.googleusercontent.com', // Remplacez par votre ID client Web\r\n  offlineAccess: true,\r\n});\r\n\r\nconst GoogleSignInButton = () => {\r\n  const signIn = async () => {\r\n    try {\r\n      await GoogleSignin.hasPlayServices();\r\n      const userInfo = await GoogleSignin.signIn();\r\n      console.log(userInfo);\r\n\r\n      // Envoyer le token au backend pour vérification\r\n      const response = await fetch('https://api-dofa.prd-aws.fff.fr/api/auth/google', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          idToken: userInfo.idToken,\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n      console.log('Backend response:', data);\r\n    } catch (error) {\r\n      if (error.code === statusCodes.SIGN_IN_CANCELLED) {\r\n        Alert.alert('Sign-In Cancelled');\r\n      } else if (error.code === statusCodes.IN_PROGRESS) {\r\n        Alert.alert('Sign-In In Progress');\r\n      } else if (error.code === statusCodes.PLAY_SERVICES_NOT_AVAILABLE) {\r\n        Alert.alert('Play Services Not Available');\r\n      } else {\r\n        Alert.alert('Sign-In Error', error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      title=\"Sign in with Google\"\r\n      onPress={signIn}\r\n    />\r\n  );\r\n};\r\n\r\nexport default GoogleSignInButton;\r\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,KAAK,QAAQ,cAAc;AAC5C,SAASC,YAAY,EAAEC,WAAW,QAAQ,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtFH,YAAY,CAACI,SAAS,CAAC;EACrBC,WAAW,EAAE,0EAA0E;EAAE;EACzFC,aAAa,EAAE;AACjB,CAAC,CAAC;AAEF,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAC/B,MAAMC,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAMR,YAAY,CAACS,eAAe,CAAC,CAAC;MACpC,MAAMC,QAAQ,GAAG,MAAMV,YAAY,CAACQ,MAAM,CAAC,CAAC;MAC5CG,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;;MAErB;MACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,iDAAiD,EAAE;QAC9EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,OAAO,EAAEV,QAAQ,CAACU;QACpB,CAAC;MACH,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClCX,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAES,IAAI,CAAC;IACxC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACd,IAAIA,KAAK,CAACC,IAAI,KAAKvB,WAAW,CAACwB,iBAAiB,EAAE;QAChD1B,KAAK,CAAC2B,KAAK,CAAC,mBAAmB,CAAC;MAClC,CAAC,MAAM,IAAIH,KAAK,CAACC,IAAI,KAAKvB,WAAW,CAAC0B,WAAW,EAAE;QACjD5B,KAAK,CAAC2B,KAAK,CAAC,qBAAqB,CAAC;MACpC,CAAC,MAAM,IAAIH,KAAK,CAACC,IAAI,KAAKvB,WAAW,CAAC2B,2BAA2B,EAAE;QACjE7B,KAAK,CAAC2B,KAAK,CAAC,6BAA6B,CAAC;MAC5C,CAAC,MAAM;QACL3B,KAAK,CAAC2B,KAAK,CAAC,eAAe,EAAEH,KAAK,CAACM,OAAO,CAAC;MAC7C;IACF;EACF,CAAC;EAED,oBACE1B,OAAA,CAACL,MAAM;IACLgC,KAAK,EAAC,qBAAqB;IAC3BC,OAAO,EAAEvB;EAAO;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEN,CAAC;AAACC,EAAA,GAtCI7B,kBAAkB;AAwCxB,eAAeA,kBAAkB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
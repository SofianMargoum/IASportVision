{"ast":null,"code":"import { statusCodes } from '../errors/errorCodes.web';\nconst errorMessage = 'RNGoogleSignIn: you are calling a not-implemented method on web platform.';\nconst logNotImplementedError = () => {\n  console.warn(errorMessage);\n};\nfunction throwNotImplementedError() {\n  const e = new Error(errorMessage);\n  // the docs say that the errors produced by the module should have a code property\n  Object.assign(e, {\n    code: statusCodes.PLAY_SERVICES_NOT_AVAILABLE\n  });\n  throw e;\n}\nasync function signIn(_options = {}) {\n  throwNotImplementedError();\n}\nasync function hasPlayServices(_options = {\n  showPlayServicesUpdateDialog: true\n}) {\n  logNotImplementedError();\n  return false;\n}\nfunction configure(_options) {\n  logNotImplementedError();\n}\nasync function addScopes(_options) {\n  logNotImplementedError();\n  return null;\n}\nasync function signInSilently() {\n  throwNotImplementedError();\n}\nasync function signOut() {\n  logNotImplementedError();\n  return null;\n}\nasync function revokeAccess() {\n  logNotImplementedError();\n  return null;\n}\nfunction hasPreviousSignIn() {\n  logNotImplementedError();\n  return false;\n}\nfunction getCurrentUser() {\n  logNotImplementedError();\n  return null;\n}\nasync function clearCachedAccessToken(_tokenString) {\n  logNotImplementedError();\n  return null;\n}\nasync function getTokens() {\n  throwNotImplementedError();\n}\nexport const GoogleSignin = {\n  hasPlayServices,\n  configure,\n  signIn,\n  addScopes,\n  signInSilently,\n  signOut,\n  revokeAccess,\n  hasPreviousSignIn,\n  getCurrentUser,\n  clearCachedAccessToken,\n  getTokens\n};","map":{"version":3,"names":["statusCodes","errorMessage","logNotImplementedError","console","warn","throwNotImplementedError","e","Error","Object","assign","code","PLAY_SERVICES_NOT_AVAILABLE","signIn","_options","hasPlayServices","showPlayServicesUpdateDialog","configure","addScopes","signInSilently","signOut","revokeAccess","hasPreviousSignIn","getCurrentUser","clearCachedAccessToken","_tokenString","getTokens","GoogleSignin"],"sources":["C:\\perso\\IA Sport Vision\\Application\\IASV\\node_modules\\@react-native-google-signin\\google-signin\\src\\signIn\\GoogleSignin.web.ts"],"sourcesContent":["import type {\n  AddScopesParams,\n  ConfigureParams,\n  GetTokensResponse,\n  HasPlayServicesParams,\n  SignInParams,\n  User,\n} from '../types';\nimport { statusCodes } from '../errors/errorCodes.web';\nconst errorMessage =\n  'RNGoogleSignIn: you are calling a not-implemented method on web platform.';\nconst logNotImplementedError = () => {\n  console.warn(errorMessage);\n};\n\nfunction throwNotImplementedError(): never {\n  const e = new Error(errorMessage);\n  // the docs say that the errors produced by the module should have a code property\n  Object.assign(e, { code: statusCodes.PLAY_SERVICES_NOT_AVAILABLE });\n  throw e;\n}\n\nasync function signIn(_options: SignInParams = {}): Promise<User> {\n  throwNotImplementedError();\n}\n\nasync function hasPlayServices(\n  _options: HasPlayServicesParams = { showPlayServicesUpdateDialog: true },\n): Promise<boolean> {\n  logNotImplementedError();\n  return false;\n}\n\nfunction configure(_options: ConfigureParams): void {\n  logNotImplementedError();\n}\n\nasync function addScopes(_options: AddScopesParams): Promise<User | null> {\n  logNotImplementedError();\n  return null;\n}\n\nasync function signInSilently(): Promise<User> {\n  throwNotImplementedError();\n}\n\nasync function signOut(): Promise<null> {\n  logNotImplementedError();\n  return null;\n}\n\nasync function revokeAccess(): Promise<null> {\n  logNotImplementedError();\n  return null;\n}\n\nfunction hasPreviousSignIn(): boolean {\n  logNotImplementedError();\n  return false;\n}\n\nfunction getCurrentUser(): User | null {\n  logNotImplementedError();\n  return null;\n}\n\nasync function clearCachedAccessToken(_tokenString: string): Promise<null> {\n  logNotImplementedError();\n  return null;\n}\n\nasync function getTokens(): Promise<GetTokensResponse> {\n  throwNotImplementedError();\n}\n\nexport const GoogleSignin = {\n  hasPlayServices,\n  configure,\n  signIn,\n  addScopes,\n  signInSilently,\n  signOut,\n  revokeAccess,\n  hasPreviousSignIn,\n  getCurrentUser,\n  clearCachedAccessToken,\n  getTokens,\n};\n"],"mappings":"AAQA,SAASA,WAAW,QAAQ,0BAA0B;AACtD,MAAMC,YAAY,GAChB,2EAA2E;AAC7E,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EACnCC,OAAO,CAACC,IAAI,CAACH,YAAY,CAAC;AAC5B,CAAC;AAED,SAASI,wBAAwBA,CAAA,EAAU;EACzC,MAAMC,CAAC,GAAG,IAAIC,KAAK,CAACN,YAAY,CAAC;EACjC;EACAO,MAAM,CAACC,MAAM,CAACH,CAAC,EAAE;IAAEI,IAAI,EAAEV,WAAW,CAACW;EAA4B,CAAC,CAAC;EACnE,MAAML,CAAC;AACT;AAEA,eAAeM,MAAMA,CAACC,QAAsB,GAAG,CAAC,CAAC,EAAiB;EAChER,wBAAwB,CAAC,CAAC;AAC5B;AAEA,eAAeS,eAAeA,CAC5BD,QAA+B,GAAG;EAAEE,4BAA4B,EAAE;AAAK,CAAC,EACtD;EAClBb,sBAAsB,CAAC,CAAC;EACxB,OAAO,KAAK;AACd;AAEA,SAASc,SAASA,CAACH,QAAyB,EAAQ;EAClDX,sBAAsB,CAAC,CAAC;AAC1B;AAEA,eAAee,SAASA,CAACJ,QAAyB,EAAwB;EACxEX,sBAAsB,CAAC,CAAC;EACxB,OAAO,IAAI;AACb;AAEA,eAAegB,cAAcA,CAAA,EAAkB;EAC7Cb,wBAAwB,CAAC,CAAC;AAC5B;AAEA,eAAec,OAAOA,CAAA,EAAkB;EACtCjB,sBAAsB,CAAC,CAAC;EACxB,OAAO,IAAI;AACb;AAEA,eAAekB,YAAYA,CAAA,EAAkB;EAC3ClB,sBAAsB,CAAC,CAAC;EACxB,OAAO,IAAI;AACb;AAEA,SAASmB,iBAAiBA,CAAA,EAAY;EACpCnB,sBAAsB,CAAC,CAAC;EACxB,OAAO,KAAK;AACd;AAEA,SAASoB,cAAcA,CAAA,EAAgB;EACrCpB,sBAAsB,CAAC,CAAC;EACxB,OAAO,IAAI;AACb;AAEA,eAAeqB,sBAAsBA,CAACC,YAAoB,EAAiB;EACzEtB,sBAAsB,CAAC,CAAC;EACxB,OAAO,IAAI;AACb;AAEA,eAAeuB,SAASA,CAAA,EAA+B;EACrDpB,wBAAwB,CAAC,CAAC;AAC5B;AAEA,OAAO,MAAMqB,YAAY,GAAG;EAC1BZ,eAAe;EACfE,SAAS;EACTJ,MAAM;EACNK,SAAS;EACTC,cAAc;EACdC,OAAO;EACPC,YAAY;EACZC,iBAAiB;EACjBC,cAAc;EACdC,sBAAsB;EACtBE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
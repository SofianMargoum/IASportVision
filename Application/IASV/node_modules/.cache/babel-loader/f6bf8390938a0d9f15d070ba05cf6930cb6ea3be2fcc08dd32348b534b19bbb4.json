{"ast":null,"code":"//\n//  react-native-orientation-locker\n//\n//\n//  Created by Wonday on 17/5/12.\n//  Copyright (c) wonday.org All rights reserved.\n//\n\n\"use strict\";\n\nexport default class Orientation {\n  static configure = options => {};\n  static getOrientation = cb => {\n    cb(\"UNKNOWN\");\n  };\n  static getDeviceOrientation = cb => {\n    cb(\"UNKNOWN\");\n  };\n  static isLocked = () => {\n    return false;\n  };\n  static lockToPortrait = () => {};\n  static lockToPortraitUpsideDown = () => {};\n  static lockToLandscape = () => {};\n  static lockToLandscapeRight = () => {};\n  static lockToLandscapeLeft = () => {};\n\n  // OrientationMaskAllButUpsideDown\n  static lockToAllOrientationsButUpsideDown = () => {};\n  static unlockAllOrientations = () => {};\n  static addOrientationListener = cb => {};\n  static removeOrientationListener = cb => {};\n  static addDeviceOrientationListener = cb => {};\n  static removeDeviceOrientationListener = cb => {};\n  static addLockListener = cb => {};\n  static removeLockListener = cb => {};\n  static removeAllListeners = () => {};\n  static getInitialOrientation = () => {\n    return \"UNKNOWN\";\n  };\n  static getAutoRotateState = cb => {\n    cb(true);\n  };\n}","map":{"version":3,"names":["Orientation","configure","options","getOrientation","cb","getDeviceOrientation","isLocked","lockToPortrait","lockToPortraitUpsideDown","lockToLandscape","lockToLandscapeRight","lockToLandscapeLeft","lockToAllOrientationsButUpsideDown","unlockAllOrientations","addOrientationListener","removeOrientationListener","addDeviceOrientationListener","removeDeviceOrientationListener","addLockListener","removeLockListener","removeAllListeners","getInitialOrientation","getAutoRotateState"],"sources":["C:/perso/IA Sport Vision/Application/IASV/node_modules/react-native-orientation-locker/src/orientation.js"],"sourcesContent":["//\n//  react-native-orientation-locker\n//\n//\n//  Created by Wonday on 17/5/12.\n//  Copyright (c) wonday.org All rights reserved.\n//\n\n\"use strict\";\n\nexport default class Orientation {\n  static configure = options => {}\n\n  static getOrientation = cb => {\n    cb(\"UNKNOWN\");\n  };\n\n  static getDeviceOrientation = cb => {\n    cb(\"UNKNOWN\");\n  };\n\n  static isLocked = () => {\n    return false;\n  };\n\n  static lockToPortrait = () => {};\n\n  static lockToPortraitUpsideDown = () => {};\n\n  static lockToLandscape = () => {};\n\n  static lockToLandscapeRight = () => {};\n\n  static lockToLandscapeLeft = () => {};\n\n  // OrientationMaskAllButUpsideDown\n  static lockToAllOrientationsButUpsideDown = () => {};\n\n  static unlockAllOrientations = () => {};\n\n  static addOrientationListener = cb => {};\n\n  static removeOrientationListener = cb => {};\n\n  static addDeviceOrientationListener = cb => {};\n\n  static removeDeviceOrientationListener = cb => {};\n\n  static addLockListener = cb => {};\n\n  static removeLockListener = cb => {};\n\n  static removeAllListeners = () => {};\n\n  static getInitialOrientation = () => {\n    return \"UNKNOWN\";\n  };\n\n  static getAutoRotateState = cb => {\n    cb(true);\n  };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,eAAe,MAAMA,WAAW,CAAC;EAC/B,OAAOC,SAAS,GAAGC,OAAO,IAAI,CAAC,CAAC;EAEhC,OAAOC,cAAc,GAAGC,EAAE,IAAI;IAC5BA,EAAE,CAAC,SAAS,CAAC;EACf,CAAC;EAED,OAAOC,oBAAoB,GAAGD,EAAE,IAAI;IAClCA,EAAE,CAAC,SAAS,CAAC;EACf,CAAC;EAED,OAAOE,QAAQ,GAAGA,CAAA,KAAM;IACtB,OAAO,KAAK;EACd,CAAC;EAED,OAAOC,cAAc,GAAGA,CAAA,KAAM,CAAC,CAAC;EAEhC,OAAOC,wBAAwB,GAAGA,CAAA,KAAM,CAAC,CAAC;EAE1C,OAAOC,eAAe,GAAGA,CAAA,KAAM,CAAC,CAAC;EAEjC,OAAOC,oBAAoB,GAAGA,CAAA,KAAM,CAAC,CAAC;EAEtC,OAAOC,mBAAmB,GAAGA,CAAA,KAAM,CAAC,CAAC;;EAErC;EACA,OAAOC,kCAAkC,GAAGA,CAAA,KAAM,CAAC,CAAC;EAEpD,OAAOC,qBAAqB,GAAGA,CAAA,KAAM,CAAC,CAAC;EAEvC,OAAOC,sBAAsB,GAAGV,EAAE,IAAI,CAAC,CAAC;EAExC,OAAOW,yBAAyB,GAAGX,EAAE,IAAI,CAAC,CAAC;EAE3C,OAAOY,4BAA4B,GAAGZ,EAAE,IAAI,CAAC,CAAC;EAE9C,OAAOa,+BAA+B,GAAGb,EAAE,IAAI,CAAC,CAAC;EAEjD,OAAOc,eAAe,GAAGd,EAAE,IAAI,CAAC,CAAC;EAEjC,OAAOe,kBAAkB,GAAGf,EAAE,IAAI,CAAC,CAAC;EAEpC,OAAOgB,kBAAkB,GAAGA,CAAA,KAAM,CAAC,CAAC;EAEpC,OAAOC,qBAAqB,GAAGA,CAAA,KAAM;IACnC,OAAO,SAAS;EAClB,CAAC;EAED,OAAOC,kBAAkB,GAAGlB,EAAE,IAAI;IAChCA,EAAE,CAAC,IAAI,CAAC;EACV,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
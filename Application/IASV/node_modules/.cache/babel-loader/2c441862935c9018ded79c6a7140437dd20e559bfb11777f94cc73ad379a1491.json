{"ast":null,"code":"import React,{useState,useEffect,useRef,useCallback,useMemo}from'react';import'./css/SearchClub.css';import{debounce}from'lodash';// Utilisation de lodash pour le debounce\nimport{searchClubs,fetchCompetitionsForClub}from'./../api';import config from'./../../config';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SearchClub=()=>{var _config$getSelectedCl;const[searchTerm,setSearchTerm]=useState('');const[clubs,setClubs]=useState([]);const[recentClubs,setRecentClubs]=useState([]);const[competitionNames,setCompetitionNames]=useState([]);const[selectedClubName,setSelectedClubName]=useState(((_config$getSelectedCl=config.getSelectedClub())===null||_config$getSelectedCl===void 0?void 0:_config$getSelectedCl.name)||null);const scrollViewRef=useRef(null);const previousSearchTerm=useRef('');useEffect(()=>{const savedRecentClubs=JSON.parse(localStorage.getItem('recentClubs'))||[];setRecentClubs(savedRecentClubs);},[]);useEffect(()=>{const savedClub=config.getSelectedClub();if(savedClub){handleClubClick(savedClub);}},[]);useEffect(()=>{const savedCompetition=config.getSelectedCompetition();if(savedCompetition){handleCompetitionClick(savedCompetition);}},[]);// Debounce de la recherche avec une durée plus longue\nconst handleSearch=useCallback(debounce(async()=>{// Vérifier la longueur du terme de recherche avant d'appeler l'API\nif(searchTerm.trim().length<3){setClubs(recentClubs);return;}// Vérification : si le terme n'a pas changé depuis l'appel précédent, on annule la recherche\nif(searchTerm===previousSearchTerm.current){return;}previousSearchTerm.current=searchTerm;// Met à jour le terme précédent\n// Appel de l'API uniquement après que le terme ait atteint une certaine longueur\nconst clubData=await searchClubs(searchTerm);if(clubData&&searchTerm===previousSearchTerm.current){// Vérification supplémentaire\nsetClubs(clubData.slice(0,30));}},1),[searchTerm,recentClubs]);useEffect(()=>{handleSearch();return()=>handleSearch.cancel();// Annuler les recherches pendantes\n},[searchTerm,handleSearch]);const updateRecentClubs=useCallback(club=>{const updatedClubs=[club,...recentClubs.filter(c=>c.cl_no!==club.cl_no)].slice(0,3);setRecentClubs(updatedClubs);localStorage.setItem('recentClubs',JSON.stringify(updatedClubs));},[recentClubs]);const handleClubClick=useCallback(async club=>{setSearchTerm('');setSelectedClubName(club.name);config.setSelectedClub(club);updateRecentClubs(club);if(scrollViewRef.current){scrollViewRef.current.scrollTo({top:0,behavior:'smooth'});}let storedCompetitions=localStorage.getItem(\"competitions_\".concat(club.cl_no));if(storedCompetitions){storedCompetitions=JSON.parse(storedCompetitions);}else{storedCompetitions=await fetchCompetitionsForClub(club.cl_no);localStorage.setItem(\"competitions_\".concat(club.cl_no),JSON.stringify(storedCompetitions));}setCompetitionNames(storedCompetitions);if(storedCompetitions.length>0&&!config.getSelectedCompetition()){handleCompetitionClick(storedCompetitions[0]);}},[updateRecentClubs]);const handleCompetitionClick=useCallback(competitionName=>{config.setSelectedCompetition(competitionName);if(scrollViewRef.current){scrollViewRef.current.scrollTo({top:0,behavior:'smooth'});}},[]);const memoizedClubList=useMemo(()=>clubs.length===0&&searchTerm===''?recentClubs:clubs,[clubs,recentClubs,searchTerm]);return/*#__PURE__*/_jsxs(\"div\",{ref:scrollViewRef,className:\"search-club-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"input-container\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),placeholder:\"Rechercher un club\"})}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"h4\",{children:\"S\\xE9lectionner un club\"}),/*#__PURE__*/_jsx(\"div\",{className:\"suggestions\",children:\"suggestions\"}),/*#__PURE__*/_jsx(\"ul\",{children:memoizedClubList.map(club=>/*#__PURE__*/_jsxs(\"li\",{onClick:()=>handleClubClick(club),className:club.name===selectedClubName?'selected':'',children:[/*#__PURE__*/_jsx(\"img\",{src:club.logo,alt:\"\".concat(club.name,\" logo\")}),/*#__PURE__*/_jsx(\"span\",{children:club.name})]},club.cl_no))}),config.getSelectedClub()&&/*#__PURE__*/_jsxs(\"div\",{className:\"competition-list\",children:[/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"h4\",{children:\"S\\xE9lectionner une \\xE9quipe\"}),/*#__PURE__*/_jsx(\"div\",{className:\"suggestions\",children:\"suggestions\"}),/*#__PURE__*/_jsx(\"ul\",{children:competitionNames.length===0?/*#__PURE__*/_jsx(\"li\",{children:\"Aucune comp\\xE9tition trouv\\xE9e\"}):competitionNames.map((name,index)=>/*#__PURE__*/_jsx(\"li\",{onClick:()=>handleCompetitionClick(name),className:name===config.getSelectedCompetition()?'selected':'',children:name},index))})]})]});};export default/*#__PURE__*/React.memo(SearchClub);","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","debounce","searchClubs","fetchCompetitionsForClub","config","jsx","_jsx","jsxs","_jsxs","SearchClub","_config$getSelectedCl","searchTerm","setSearchTerm","clubs","setClubs","recentClubs","setRecentClubs","competitionNames","setCompetitionNames","selectedClubName","setSelectedClubName","getSelectedClub","name","scrollViewRef","previousSearchTerm","savedRecentClubs","JSON","parse","localStorage","getItem","savedClub","handleClubClick","savedCompetition","getSelectedCompetition","handleCompetitionClick","handleSearch","trim","length","current","clubData","slice","cancel","updateRecentClubs","club","updatedClubs","filter","c","cl_no","setItem","stringify","setSelectedClub","scrollTo","top","behavior","storedCompetitions","concat","competitionName","setSelectedCompetition","memoizedClubList","ref","className","children","type","value","onChange","e","target","placeholder","map","onClick","src","logo","alt","index","memo"],"sources":["C:/perso/IA Sport Vision/Application/IASV/src/components/Explore/SearchClub.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\r\nimport './css/SearchClub.css';\r\nimport { debounce } from 'lodash';  // Utilisation de lodash pour le debounce\r\nimport { searchClubs, fetchCompetitionsForClub } from './../api';\r\nimport config from './../../config'; \r\n\r\nconst SearchClub = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [clubs, setClubs] = useState([]);\r\n  const [recentClubs, setRecentClubs] = useState([]);\r\n  const [competitionNames, setCompetitionNames] = useState([]);\r\n  const [selectedClubName, setSelectedClubName] = useState(config.getSelectedClub()?.name || null);\r\n\r\n  const scrollViewRef = useRef(null);\r\n  const previousSearchTerm = useRef('');\r\n\r\n  useEffect(() => {\r\n    const savedRecentClubs = JSON.parse(localStorage.getItem('recentClubs')) || [];\r\n    setRecentClubs(savedRecentClubs);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const savedClub = config.getSelectedClub();\r\n    if (savedClub) {\r\n      handleClubClick(savedClub);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const savedCompetition = config.getSelectedCompetition();\r\n    if (savedCompetition) {\r\n      handleCompetitionClick(savedCompetition);\r\n    }\r\n  }, []);\r\n\r\n  // Debounce de la recherche avec une durée plus longue\r\n  const handleSearch = useCallback(\r\n    debounce(async () => {\r\n      // Vérifier la longueur du terme de recherche avant d'appeler l'API\r\n      if (searchTerm.trim().length < 3) {\r\n        setClubs(recentClubs);\r\n        return;\r\n      }\r\n      \r\n      // Vérification : si le terme n'a pas changé depuis l'appel précédent, on annule la recherche\r\n      if (searchTerm === previousSearchTerm.current) {\r\n        return;\r\n      }\r\n      \r\n      previousSearchTerm.current = searchTerm; // Met à jour le terme précédent\r\n\r\n      // Appel de l'API uniquement après que le terme ait atteint une certaine longueur\r\n      const clubData = await searchClubs(searchTerm);\r\n\r\n      if (clubData && searchTerm === previousSearchTerm.current) {  // Vérification supplémentaire\r\n        setClubs(clubData.slice(0, 30));\r\n      }\r\n    }, 1), [searchTerm, recentClubs]\r\n  );\r\n\r\n  useEffect(() => {\r\n    handleSearch();\r\n    return () => handleSearch.cancel();  // Annuler les recherches pendantes\r\n  }, [searchTerm, handleSearch]);\r\n\r\n  const updateRecentClubs = useCallback((club) => {\r\n    const updatedClubs = [club, ...recentClubs.filter(c => c.cl_no !== club.cl_no)].slice(0, 3);\r\n    setRecentClubs(updatedClubs);\r\n    localStorage.setItem('recentClubs', JSON.stringify(updatedClubs));\r\n  }, [recentClubs]);\r\n\r\n  const handleClubClick = useCallback(async (club) => {\r\n    setSearchTerm('');\r\n    setSelectedClubName(club.name);\r\n    config.setSelectedClub(club);  \r\n    updateRecentClubs(club);\r\n\r\n    if (scrollViewRef.current) {\r\n      scrollViewRef.current.scrollTo({ top: 0, behavior: 'smooth' });\r\n    }\r\n\r\n    let storedCompetitions = localStorage.getItem(`competitions_${club.cl_no}`);\r\n    if (storedCompetitions) {\r\n      storedCompetitions = JSON.parse(storedCompetitions);\r\n    } else {\r\n      storedCompetitions = await fetchCompetitionsForClub(club.cl_no);\r\n      localStorage.setItem(`competitions_${club.cl_no}`, JSON.stringify(storedCompetitions));\r\n    }\r\n\r\n    setCompetitionNames(storedCompetitions);\r\n\r\n    if (storedCompetitions.length > 0 && !config.getSelectedCompetition()) {\r\n      handleCompetitionClick(storedCompetitions[0]);\r\n    }\r\n  }, [updateRecentClubs]);\r\n\r\n  const handleCompetitionClick = useCallback((competitionName) => {\r\n    config.setSelectedCompetition(competitionName);  \r\n\r\n    if (scrollViewRef.current) {\r\n      scrollViewRef.current.scrollTo({ top: 0, behavior: 'smooth' });\r\n    }\r\n  }, []);\r\n\r\n  const memoizedClubList = useMemo(() => (\r\n    clubs.length === 0 && searchTerm === '' ? \r\n      recentClubs : clubs\r\n  ), [clubs, recentClubs, searchTerm]);\r\n\r\n  return (\r\n    <div ref={scrollViewRef} className=\"search-club-container\">\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          placeholder=\"Rechercher un club\"\r\n        />\r\n      </div>\r\n      <hr />\r\n      <h4>Sélectionner un club</h4>\r\n      <div className=\"suggestions\">suggestions</div>\r\n      <ul>\r\n        {memoizedClubList.map((club) => (\r\n          <li\r\n            key={club.cl_no}\r\n            onClick={() => handleClubClick(club)}\r\n            className={club.name === selectedClubName ? 'selected' : ''}\r\n          >\r\n            <img src={club.logo} alt={`${club.name} logo`} />\r\n            <span>{club.name}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {config.getSelectedClub() && (\r\n        <div className=\"competition-list\">\r\n          <hr />\r\n          <h4>Sélectionner une équipe</h4>\r\n          <div className=\"suggestions\">suggestions</div>\r\n          <ul>\r\n            {competitionNames.length === 0 ? (\r\n              <li>Aucune compétition trouvée</li>\r\n            ) : (\r\n              competitionNames.map((name, index) => (\r\n                <li \r\n                  key={index} \r\n                  onClick={() => handleCompetitionClick(name)}\r\n                  className={name === config.getSelectedCompetition() ? 'selected' : ''}\r\n                >\r\n                  {name}\r\n                </li>\r\n              ))\r\n            )}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(SearchClub);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\perso\\\\IA Sport Vision\\\\Application\\\\IASV\\\\src\\\\components\\\\Video\\\\ListeVideoSidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './css/ListeVideoSidebar.css';\nimport { getSelectedClub } from './../../config';\n\n// Fonction pour reformater la date si nécessaire (exemple si la date est au format \"dd/MM/yyyy\")\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst parseDate = dateString => {\n  // Essayez de créer un objet Date avec le format ISO si c'est déjà dans ce format\n  const date = new Date(dateString);\n  if (isNaN(date)) {\n    // Si ce n'est pas un format compatible, essayez de le parser manuellement\n    const parts = dateString.split('/');\n    // Vérifiez si c'est un format \"dd/MM/yyyy\"\n    if (parts.length === 3) {\n      const day = parseInt(parts[0], 10);\n      const month = parseInt(parts[1], 10) - 1; // Mois dans Date commence à 0\n      const year = parseInt(parts[2], 10);\n      return new Date(year, month, day);\n    }\n  }\n  return date;\n};\nconst ListeVideoSidebar = ({\n  onVideoSelect\n}) => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSearch = async () => {\n    setLoading(true);\n    setError(null);\n    const club = getSelectedClub();\n    console.log('Selected Club:', club); // Vérifiez si un club est bien sélectionné\n    const folder = club ? club.name : '';\n    console.log('Club folder:', folder);\n    if (folder) {\n      const url = `https://ia-sport.oa.r.appspot.com/api/videos?folder=${encodeURIComponent(folder)}`;\n      try {\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error('Erreur lors de la récupération des vidéos');\n        }\n        const data = await response.json();\n        console.log('API Data:', data);\n\n        // Tri des vidéos par date de création (la plus récente en premier)\n        const sortedVideos = (data.videos || []).sort((a, b) => parseDate(b.creationDate) - parseDate(a.creationDate));\n        setVideos(sortedVideos);\n        setSelectedVideo(sortedVideos[0] || null);\n\n        // Sélectionner la première vidéo\n        if (sortedVideos.length > 0) {\n          onVideoSelect(sortedVideos[0]);\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de la recherche des vidéos:\", error);\n        setError('Impossible de charger les vidéos. Veuillez réessayer plus tard.');\n      } finally {\n        setLoading(false);\n      }\n    } else {\n      setVideos([]);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    handleSearch(); // Appel direct sans useCallback\n  }, []); // Aucun tableau de dépendance pour simplifier le flux\n\n  const handleVideoSelect = video => {\n    setSelectedVideo(video);\n    onVideoSelect(video); // Passer la vidéo sélectionnée au parent\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"liste-videoSidebar-container\",\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"liste-videoSidebar-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"liste-videoSidebar-titles\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"liste-videoSidebar-titles-header\",\n          children: \"Toutes les matchs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), videos.length > 0 ? videos.map((video, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `liste-video-title ${selectedVideo === video ? 'selected' : ''}`,\n          onClick: () => handleVideoSelect(video),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/ImageDeConverture.jpg\",\n            width: \"64\",\n            height: \"36\",\n            alt: \"Vid\\xE9o de couverture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"liste-videoSidebar-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"liste-videoSidebar-title-creationDate\",\n              children: video.creationDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"liste-videoSidebar-title-name\",\n              children: video.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-videos\",\n          children: \"Aucune vid\\xE9o disponible\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(ListeVideoSidebar, \"XR2yFRd0AEByGDGgbpJcrvZt5AA=\");\n_c = ListeVideoSidebar;\nexport default ListeVideoSidebar;\nvar _c;\n$RefreshReg$(_c, \"ListeVideoSidebar\");","map":{"version":3,"names":["React","useState","useEffect","getSelectedClub","jsxDEV","_jsxDEV","parseDate","dateString","date","Date","isNaN","parts","split","length","day","parseInt","month","year","ListeVideoSidebar","onVideoSelect","_s","videos","setVideos","selectedVideo","setSelectedVideo","loading","setLoading","error","setError","handleSearch","club","console","log","folder","name","url","encodeURIComponent","response","fetch","ok","Error","data","json","sortedVideos","sort","a","b","creationDate","handleVideoSelect","video","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","src","width","height","alt","_c","$RefreshReg$"],"sources":["C:/perso/IA Sport Vision/Application/IASV/src/components/Video/ListeVideoSidebar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './css/ListeVideoSidebar.css';\r\nimport { getSelectedClub } from './../../config';\r\n\r\n// Fonction pour reformater la date si nécessaire (exemple si la date est au format \"dd/MM/yyyy\")\r\nconst parseDate = (dateString) => {\r\n  // Essayez de créer un objet Date avec le format ISO si c'est déjà dans ce format\r\n  const date = new Date(dateString);\r\n\r\n  if (isNaN(date)) {\r\n    // Si ce n'est pas un format compatible, essayez de le parser manuellement\r\n    const parts = dateString.split('/');\r\n    // Vérifiez si c'est un format \"dd/MM/yyyy\"\r\n    if (parts.length === 3) {\r\n      const day = parseInt(parts[0], 10);\r\n      const month = parseInt(parts[1], 10) - 1; // Mois dans Date commence à 0\r\n      const year = parseInt(parts[2], 10);\r\n      return new Date(year, month, day);\r\n    }\r\n  }\r\n\r\n  return date;\r\n};\r\n\r\nconst ListeVideoSidebar = ({ onVideoSelect }) => {\r\n  const [videos, setVideos] = useState([]);\r\n  const [selectedVideo, setSelectedVideo] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSearch = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    const club = getSelectedClub();\r\n    console.log('Selected Club:', club); // Vérifiez si un club est bien sélectionné\r\n    const folder = club ? club.name : '';\r\n    console.log('Club folder:', folder);\r\n\r\n    if (folder) {\r\n      const url = `https://ia-sport.oa.r.appspot.com/api/videos?folder=${encodeURIComponent(folder)}`;\r\n      \r\n      try {\r\n        const response = await fetch(url);\r\n        if (!response.ok) {\r\n          throw new Error('Erreur lors de la récupération des vidéos');\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('API Data:', data);\r\n\r\n        // Tri des vidéos par date de création (la plus récente en premier)\r\n        const sortedVideos = (data.videos || []).sort((a, b) => parseDate(b.creationDate) - parseDate(a.creationDate));\r\n\r\n        setVideos(sortedVideos);\r\n        setSelectedVideo(sortedVideos[0] || null);\r\n\r\n        // Sélectionner la première vidéo\r\n        if (sortedVideos.length > 0) {\r\n          onVideoSelect(sortedVideos[0]); \r\n        }\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la recherche des vidéos:\", error);\r\n        setError('Impossible de charger les vidéos. Veuillez réessayer plus tard.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      setVideos([]);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleSearch(); // Appel direct sans useCallback\r\n  }, []); // Aucun tableau de dépendance pour simplifier le flux\r\n\r\n  const handleVideoSelect = (video) => {\r\n    setSelectedVideo(video);\r\n    onVideoSelect(video); // Passer la vidéo sélectionnée au parent\r\n  };\r\n\r\n  return (\r\n    <div className=\"liste-videoSidebar-container\">\r\n      {loading && <div className=\"loader\">Chargement...</div>}\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      {!loading && !error && (\r\n        <div className=\"liste-videoSidebar-wrapper\">\r\n          <ul className=\"liste-videoSidebar-titles\">\r\n            <div className=\"liste-videoSidebar-titles-header\">\r\n              Toutes les matchs\r\n            </div>\r\n            {videos.length > 0 ? (\r\n              videos.map((video, index) => (\r\n                <li\r\n                  key={index}\r\n                  className={`liste-video-title ${selectedVideo === video ? 'selected' : ''}`}\r\n                  onClick={() => handleVideoSelect(video)}\r\n                >\r\n                  <img src=\"/ImageDeConverture.jpg\" width=\"64\" height=\"36\" alt=\"Vidéo de couverture\" />\r\n                  <div className=\"liste-videoSidebar-title\">\r\n                    <div className=\"liste-videoSidebar-title-creationDate\">\r\n                      {video.creationDate}\r\n                    </div>\r\n                    <div className=\"liste-videoSidebar-title-name\">\r\n                      {video.name}\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              ))\r\n            ) : (\r\n              <p className=\"no-videos\">Aucune vidéo disponible</p>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListeVideoSidebar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\perso\\\\IA Sport Vision\\\\Application\\\\IASV\\\\src\\\\components\\\\Profile.js\",\n  _s = $RefreshSig$();\n// src/components/Profile.js\nimport React, { useEffect } from 'react';\nimport { View, Text, TouchableOpacity, Platform } from 'react-native'; // Utilisation des composants React Native\nimport { GoogleLogin } from '@react-oauth/google'; // Pour le web\nimport { GoogleSignin } from '@react-native-google-signin/google-signin'; // Pour mobile\nimport { sendIdTokenToBackend } from './api'; // Chemin vers votre fichier API\nimport './css/Profile.css'; // Inclure vos styles CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  useEffect(() => {\n    if (Platform.OS !== 'web') {\n      GoogleSignin.configure({\n        webClientId: 'YOUR_WEB_CLIENT_ID' // Remplacez par votre ID client web\n      });\n    }\n  }, []);\n  const handleGoogleLoginSuccess = async response => {\n    const idToken = response.credential; // Pour le web\n\n    try {\n      const data = await sendIdTokenToBackend(idToken);\n      console.log('Utilisateur vérifié avec succès:', data);\n    } catch (error) {\n      console.error('Erreur lors de la vérification du token Google:', error);\n    }\n  };\n  const handleGoogleLoginMobile = async () => {\n    try {\n      const userInfo = await GoogleSignin.signIn();\n      console.log('Utilisateur connecté:', userInfo);\n\n      // Envoyer le token d'identification au backend\n      const idToken = userInfo.idToken; // Utilisez idToken pour mobile\n      const data = await sendIdTokenToBackend(idToken);\n      console.log('Utilisateur vérifié avec succès:', data);\n    } catch (error) {\n      console.error('Erreur lors de la connexion avec Google:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(View, {\n    className: \"profile-page\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      className: \"profile-container\",\n      children: \"Connectez-vous \\xE0 votre compte\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), Platform.OS === 'web' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-btn\",\n      children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: handleGoogleLoginSuccess,\n        onError: response => console.error('Login Failure:', response)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TouchableOpacity, {\n      onPress: handleGoogleLoginMobile,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        children: \"Se connecter avec Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","View","Text","TouchableOpacity","Platform","GoogleLogin","GoogleSignin","sendIdTokenToBackend","jsxDEV","_jsxDEV","Profile","_s","OS","configure","webClientId","handleGoogleLoginSuccess","response","idToken","credential","data","console","log","error","handleGoogleLoginMobile","userInfo","signIn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","onPress","_c","$RefreshReg$"],"sources":["C:/perso/IA Sport Vision/Application/IASV/src/components/Profile.js"],"sourcesContent":["// src/components/Profile.js\r\nimport React, { useEffect } from 'react';\r\nimport { View, Text, TouchableOpacity, Platform } from 'react-native'; // Utilisation des composants React Native\r\nimport { GoogleLogin } from '@react-oauth/google'; // Pour le web\r\nimport { GoogleSignin } from '@react-native-google-signin/google-signin'; // Pour mobile\r\nimport { sendIdTokenToBackend } from './api'; // Chemin vers votre fichier API\r\nimport './css/Profile.css'; // Inclure vos styles CSS\r\n\r\nconst Profile = () => {\r\n  useEffect(() => {\r\n    if (Platform.OS !== 'web') {\r\n      GoogleSignin.configure({\r\n        webClientId: 'YOUR_WEB_CLIENT_ID', // Remplacez par votre ID client web\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleGoogleLoginSuccess = async (response) => {\r\n    const idToken = response.credential; // Pour le web\r\n\r\n    try {\r\n      const data = await sendIdTokenToBackend(idToken);\r\n      console.log('Utilisateur vérifié avec succès:', data);\r\n    } catch (error) {\r\n      console.error('Erreur lors de la vérification du token Google:', error);\r\n    }\r\n  };\r\n\r\n  const handleGoogleLoginMobile = async () => {\r\n    try {\r\n      const userInfo = await GoogleSignin.signIn();\r\n      console.log('Utilisateur connecté:', userInfo);\r\n\r\n      // Envoyer le token d'identification au backend\r\n      const idToken = userInfo.idToken; // Utilisez idToken pour mobile\r\n      const data = await sendIdTokenToBackend(idToken);\r\n      console.log('Utilisateur vérifié avec succès:', data);\r\n    } catch (error) {\r\n      console.error('Erreur lors de la connexion avec Google:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View className=\"profile-page\">\r\n      <Text className=\"profile-container\">Connectez-vous à votre compte</Text>\r\n\r\n      {/* Google Login */}\r\n      {Platform.OS === 'web' ? (\r\n        <div className=\"login-btn\">\r\n          <GoogleLogin\r\n            onSuccess={handleGoogleLoginSuccess}\r\n            onError={(response) => console.error('Login Failure:', response)}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <TouchableOpacity onPress={handleGoogleLoginMobile}>\r\n          <Text>Se connecter avec Google</Text>\r\n        </TouchableOpacity>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
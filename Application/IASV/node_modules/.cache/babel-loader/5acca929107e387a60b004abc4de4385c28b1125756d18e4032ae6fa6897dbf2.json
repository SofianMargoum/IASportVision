{"ast":null,"code":"// api.js\n\n// Fonction pour rechercher des clubs\nexport const searchClubs = async searchTerm => {\n  try {\n    const response = await fetch(`https://api-dofa.prd-aws.fff.fr/api/clubs?clNom=${searchTerm}`);\n    const data = await response.json();\n    return data['hydra:member'].map(club => ({\n      name: club.name,\n      logo: club.logo,\n      cl_no: club.cl_no\n    }));\n  } catch (error) {\n    console.error('Error fetching clubs:', error);\n    return [];\n  }\n};\n\n// Fonction pour démarrer l'enregistrement\nexport const startRecording = async () => {\n  try {\n    const response = await fetch('https://ia-sport.oa.r.appspot.com/api/start-recording', {\n      method: 'PUT'\n    });\n    if (!response.ok) {\n      throw new Error('Échec du démarrage de l\\'enregistrement');\n    }\n    return response;\n  } catch (error) {\n    console.error('Error starting recording:', error);\n    throw error;\n  }\n};\n\n// Fonction pour arrêter l'enregistrement\nexport const stopRecording = async () => {\n  try {\n    const response = await fetch('https://ia-sport.oa.r.appspot.com/api/stop-recording', {\n      method: 'PUT'\n    });\n    if (!response.ok) {\n      throw new Error('Échec de l\\'arrêt de l\\'enregistrement');\n    }\n    return response;\n  } catch (error) {\n    console.error('Error stopping recording:', error);\n    throw error;\n  }\n};\n\n// Fonction pour récupérer l'URI de lecture et la durée de la vidéo\nexport const getPlaybackURI = async () => {\n  try {\n    const response = await fetch('https://ia-sport.oa.r.appspot.com/api/search', {\n      method: 'GET'\n    });\n    if (!response.ok) {\n      throw new Error('Échec de la récupération de l\\'URI de lecture');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching playback URI:', error);\n    throw error;\n  }\n};\n\n// Fonction pour télécharger la vidéo\nexport const uploadVideo = async (filename, playbackURI, directory, duration) => {\n  try {\n    const response = await fetch('https://ia-sport.oa.r.appspot.com/api/upload', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        filename: directory + `${filename}.mp4`,\n        cameraRtspUrl: playbackURI,\n        directory: directory,\n        duration: duration\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Échec du téléchargement de la vidéo');\n    }\n    return response;\n  } catch (error) {\n    console.error('Error uploading video:', error);\n    throw error;\n  }\n};\nexport const fetchCompetitionsForClub = async cl_no => {\n  try {\n    const response = await fetch(`https://api-dofa.prd-aws.fff.fr/api/clubs/${cl_no}/equipes`);\n    const data = await response.json();\n\n    // Extraire les noms des compétitions dont le type est \"CH\"\n    const competitionNames = data['hydra:member'].flatMap(team => team.engagements.filter(engagement => engagement.competition.type === \"CH\").map(engagement => engagement.competition.name));\n    return competitionNames;\n  } catch (error) {\n    console.error('Error fetching competitions:', error);\n    return [];\n  }\n};\n\n// Fonction pour récupérer les matchs d'un club\nexport const fetchMatchesForClub = async cl_no => {\n  try {\n    const response = await fetch(`https://api-dofa.prd-aws.fff.fr/api/clubs/1663/matchs`);\n    if (!response.ok) {\n      throw new Error('Échec de la récupération des matchs');\n    }\n    const data = await response.json();\n\n    // Adaptation en fonction des données reçues\n    return data['hydra:member'].filter(match => match.home && match.home.type === 'C' || match.away && match.away.type === 'C').map(match => ({\n      id: match['@id'].split('/').pop(),\n      // Extraction de l'ID depuis l'URL\n      date: match.date,\n      time: match.time,\n      home_score: match.home_score,\n      away_score: match.away_score,\n      season: match.competition.season,\n      // Ajout de la saison\n      homeCompetition: match.home && match.home.engagements[1].competition.name ? match.home.engagements[1].competition.name : '',\n      // Vérifie l'existence\n      awayCompetition: match.away && match.away.engagements[1].competition.name ? match.away.engagements[1].competition.name : '',\n      // Vérifie l'existence\n      homeTeam: match.home && match.home.short_name ? match.home.short_name : '',\n      // Vérifie l'existence\n      awayTeam: match.away && match.away.short_name ? match.away.short_name : '',\n      // Vérifie l'existence\n      homeLogo: match.home && match.home.club.logo ? match.home.club.logo : '',\n      // Vérifie l'existence\n      awayLogo: match.away && match.away.club.logo ? match.away.club.logo : '' // Vérifie l'existence\n    }));\n  } catch (error) {\n    console.error('Error fetching matches:', error);\n    return [];\n  }\n};","map":{"version":3,"names":["searchClubs","searchTerm","response","fetch","data","json","map","club","name","logo","cl_no","error","console","startRecording","method","ok","Error","stopRecording","getPlaybackURI","uploadVideo","filename","playbackURI","directory","duration","headers","body","JSON","stringify","cameraRtspUrl","fetchCompetitionsForClub","competitionNames","flatMap","team","engagements","filter","engagement","competition","type","fetchMatchesForClub","match","home","away","id","split","pop","date","time","home_score","away_score","season","homeCompetition","awayCompetition","homeTeam","short_name","awayTeam","homeLogo","awayLogo"],"sources":["C:/perso/IA Sport Vision/Application/IASV/src/components/api.js"],"sourcesContent":["// api.js\r\n\r\n// Fonction pour rechercher des clubs\r\nexport const searchClubs = async (searchTerm) => {\r\n  try {\r\n    const response = await fetch(`https://api-dofa.prd-aws.fff.fr/api/clubs?clNom=${searchTerm}`);\r\n    const data = await response.json();\r\n    return data['hydra:member'].map(club => ({\r\n      name: club.name,\r\n      logo: club.logo,\r\n      cl_no: club.cl_no,\r\n    }));\r\n  } catch (error) {\r\n    console.error('Error fetching clubs:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n\r\n// Fonction pour démarrer l'enregistrement\r\nexport const startRecording = async () => {\r\n  try {\r\n    const response = await fetch('https://ia-sport.oa.r.appspot.com/api/start-recording', {\r\n      method: 'PUT'\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Échec du démarrage de l\\'enregistrement');\r\n    }\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Error starting recording:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fonction pour arrêter l'enregistrement\r\nexport const stopRecording = async () => {\r\n  try {\r\n    const response = await fetch('https://ia-sport.oa.r.appspot.com/api/stop-recording', {\r\n      method: 'PUT'\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Échec de l\\'arrêt de l\\'enregistrement');\r\n    }\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Error stopping recording:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fonction pour récupérer l'URI de lecture et la durée de la vidéo\r\nexport const getPlaybackURI = async () => {\r\n  try {\r\n    const response = await fetch('https://ia-sport.oa.r.appspot.com/api/search', {\r\n      method: 'GET'\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Échec de la récupération de l\\'URI de lecture');\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching playback URI:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fonction pour télécharger la vidéo\r\nexport const uploadVideo = async (filename, playbackURI, directory, duration) => {\r\n  try {\r\n    const response = await fetch('https://ia-sport.oa.r.appspot.com/api/upload', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        filename: directory + `${filename}.mp4`,\r\n        cameraRtspUrl: playbackURI,\r\n        directory: directory,\r\n        duration: duration,\r\n      }),\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Échec du téléchargement de la vidéo');\r\n    }\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Error uploading video:', error);\r\n    throw error;\r\n  }\r\n};\r\nexport const fetchCompetitionsForClub = async (cl_no) => {\r\n  try {\r\n    const response = await fetch(`https://api-dofa.prd-aws.fff.fr/api/clubs/${cl_no}/equipes`);\r\n    const data = await response.json();\r\n\r\n    // Extraire les noms des compétitions dont le type est \"CH\"\r\n    const competitionNames = data['hydra:member'].flatMap(team =>\r\n      team.engagements\r\n        .filter(engagement => engagement.competition.type === \"CH\")\r\n        .map(engagement => engagement.competition.name)\r\n    );\r\n\r\n    return competitionNames;\r\n  } catch (error) {\r\n    console.error('Error fetching competitions:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Fonction pour récupérer les matchs d'un club\r\nexport const fetchMatchesForClub = async (cl_no) => {\r\n  try {\r\n    const response = await fetch(`https://api-dofa.prd-aws.fff.fr/api/clubs/1663/matchs`);\r\n    if (!response.ok) {\r\n      throw new Error('Échec de la récupération des matchs');\r\n    }\r\n    const data = await response.json();\r\n\r\n    // Adaptation en fonction des données reçues\r\n    return data['hydra:member']\r\n\t      .filter(match => \r\n        (match.home && match.home.type === 'C') || \r\n        (match.away && match.away.type === 'C')\r\n      )\r\n\t.map(match => ({\r\n      id: match['@id'].split('/').pop(), // Extraction de l'ID depuis l'URL\r\n      date: match.date,\r\n      time: match.time,\r\n      home_score: match.home_score,\r\n      away_score: match.away_score,\r\n      season: match.competition.season, // Ajout de la saison\r\n  homeCompetition: match.home && match.home.engagements[1].competition.name ? match.home.engagements[1].competition.name : '', // Vérifie l'existence\r\n  awayCompetition: match.away && match.away.engagements[1].competition.name ? match.away.engagements[1].competition.name : '', // Vérifie l'existence\r\n  homeTeam: match.home && match.home.short_name ? match.home.short_name : '', // Vérifie l'existence\r\n  awayTeam: match.away && match.away.short_name ? match.away.short_name : '', // Vérifie l'existence\r\n  homeLogo: match.home && match.home.club.logo ? match.home.club.logo : '', // Vérifie l'existence\r\n  awayLogo: match.away && match.away.club.logo ? match.away.club.logo : '', // Vérifie l'existence\r\n    }));\r\n  } catch (error) {\r\n    console.error('Error fetching matches:', error);\r\n    return [];\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
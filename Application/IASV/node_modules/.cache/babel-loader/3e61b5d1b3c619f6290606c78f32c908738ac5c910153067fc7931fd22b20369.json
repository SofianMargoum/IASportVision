{"ast":null,"code":"let selectedClub=null;let selectedCompetition=null;let recentClubs=[];// Ajout d'une variable pour stocker les clubs récents\nconst eventEmitter=new EventTarget();// Enregistrer le club sélectionné\nconst setSelectedClub=club=>{selectedClub=club;localStorage.setItem('selectedClub',JSON.stringify(club));// Mettre à jour la liste des clubs récents\nrecentClubs=[club,...recentClubs.filter(c=>c.cl_no!==club.cl_no)].slice(0,3);localStorage.setItem('recentClubs',JSON.stringify(recentClubs));// Sauvegarder les 3 derniers clubs\neventEmitter.dispatchEvent(new CustomEvent('clubChanged',{detail:club}));};// Obtenir le club sélectionné\nconst getSelectedClub=()=>{if(!selectedClub){selectedClub=JSON.parse(localStorage.getItem('selectedClub'));}return selectedClub;};// Enregistrer la compétition sélectionnée\nconst setSelectedCompetition=competition=>{selectedCompetition=competition;localStorage.setItem('selectedCompetition',competition);eventEmitter.dispatchEvent(new CustomEvent('competitionChanged',{detail:competition}));};// Obtenir la compétition sélectionnée\nconst getSelectedCompetition=()=>{if(!selectedCompetition){selectedCompetition=localStorage.getItem('selectedCompetition');}return selectedCompetition;};// Obtenir les trois derniers clubs sélectionnés\nconst getRecentClubs=()=>{if(recentClubs.length===0){recentClubs=JSON.parse(localStorage.getItem('recentClubs'))||[];}return recentClubs;};// S'abonner aux changements du club\nconst onClubChange=callback=>{eventEmitter.addEventListener('clubChanged',event=>{callback(event.detail);});};// S'abonner aux changements de compétition\nconst onCompetitionChange=callback=>{eventEmitter.addEventListener('competitionChanged',event=>{callback(event.detail);});};module.exports={setSelectedClub,getSelectedClub,setSelectedCompetition,getSelectedCompetition,getRecentClubs,// Exporter la fonction pour obtenir les clubs récents\nonClubChange,onCompetitionChange};","map":{"version":3,"names":["selectedClub","selectedCompetition","recentClubs","eventEmitter","EventTarget","setSelectedClub","club","localStorage","setItem","JSON","stringify","filter","c","cl_no","slice","dispatchEvent","CustomEvent","detail","getSelectedClub","parse","getItem","setSelectedCompetition","competition","getSelectedCompetition","getRecentClubs","length","onClubChange","callback","addEventListener","event","onCompetitionChange","module","exports"],"sources":["C:/perso/IA Sport Vision/Application/IASV/src/config.js"],"sourcesContent":["let selectedClub = null;\r\nlet selectedCompetition = null;\r\nlet recentClubs = [];  // Ajout d'une variable pour stocker les clubs récents\r\n\r\nconst eventEmitter = new EventTarget();\r\n\r\n// Enregistrer le club sélectionné\r\nconst setSelectedClub = (club) => {\r\n  selectedClub = club;\r\n  localStorage.setItem('selectedClub', JSON.stringify(club));\r\n  \r\n  // Mettre à jour la liste des clubs récents\r\n  recentClubs = [club, ...recentClubs.filter(c => c.cl_no !== club.cl_no)].slice(0, 3);\r\n  localStorage.setItem('recentClubs', JSON.stringify(recentClubs));  // Sauvegarder les 3 derniers clubs\r\n\r\n  eventEmitter.dispatchEvent(new CustomEvent('clubChanged', { detail: club }));\r\n};\r\n\r\n// Obtenir le club sélectionné\r\nconst getSelectedClub = () => {\r\n  if (!selectedClub) {\r\n    selectedClub = JSON.parse(localStorage.getItem('selectedClub'));\r\n  }\r\n  return selectedClub;\r\n};\r\n\r\n// Enregistrer la compétition sélectionnée\r\nconst setSelectedCompetition = (competition) => {\r\n  selectedCompetition = competition;\r\n  localStorage.setItem('selectedCompetition', competition);\r\n  \r\n  eventEmitter.dispatchEvent(new CustomEvent('competitionChanged', { detail: competition }));\r\n};\r\n\r\n// Obtenir la compétition sélectionnée\r\nconst getSelectedCompetition = () => {\r\n  if (!selectedCompetition) {\r\n    selectedCompetition = localStorage.getItem('selectedCompetition');\r\n  }\r\n  return selectedCompetition;\r\n};\r\n\r\n// Obtenir les trois derniers clubs sélectionnés\r\nconst getRecentClubs = () => {\r\n  if (recentClubs.length === 0) {\r\n    recentClubs = JSON.parse(localStorage.getItem('recentClubs')) || [];\r\n  }\r\n  return recentClubs;\r\n};\r\n\r\n// S'abonner aux changements du club\r\nconst onClubChange = (callback) => {\r\n  eventEmitter.addEventListener('clubChanged', (event) => {\r\n    callback(event.detail);\r\n  });\r\n};\r\n\r\n// S'abonner aux changements de compétition\r\nconst onCompetitionChange = (callback) => {\r\n  eventEmitter.addEventListener('competitionChanged', (event) => {\r\n    callback(event.detail);\r\n  });\r\n};\r\n\r\nmodule.exports = {\r\n  setSelectedClub,\r\n  getSelectedClub,\r\n  setSelectedCompetition,\r\n  getSelectedCompetition,\r\n  getRecentClubs,  // Exporter la fonction pour obtenir les clubs récents\r\n  onClubChange,\r\n  onCompetitionChange,\r\n};\r\n"],"mappings":"AAAA,GAAI,CAAAA,YAAY,CAAG,IAAI,CACvB,GAAI,CAAAC,mBAAmB,CAAG,IAAI,CAC9B,GAAI,CAAAC,WAAW,CAAG,EAAE,CAAG;AAEvB,KAAM,CAAAC,YAAY,CAAG,GAAI,CAAAC,WAAW,CAAC,CAAC,CAEtC;AACA,KAAM,CAAAC,eAAe,CAAIC,IAAI,EAAK,CAChCN,YAAY,CAAGM,IAAI,CACnBC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC,CAE1D;AACAJ,WAAW,CAAG,CAACI,IAAI,CAAE,GAAGJ,WAAW,CAACS,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACC,KAAK,GAAKP,IAAI,CAACO,KAAK,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CACpFP,YAAY,CAACC,OAAO,CAAC,aAAa,CAAEC,IAAI,CAACC,SAAS,CAACR,WAAW,CAAC,CAAC,CAAG;AAEnEC,YAAY,CAACY,aAAa,CAAC,GAAI,CAAAC,WAAW,CAAC,aAAa,CAAE,CAAEC,MAAM,CAAEX,IAAK,CAAC,CAAC,CAAC,CAC9E,CAAC,CAED;AACA,KAAM,CAAAY,eAAe,CAAGA,CAAA,GAAM,CAC5B,GAAI,CAAClB,YAAY,CAAE,CACjBA,YAAY,CAAGS,IAAI,CAACU,KAAK,CAACZ,YAAY,CAACa,OAAO,CAAC,cAAc,CAAC,CAAC,CACjE,CACA,MAAO,CAAApB,YAAY,CACrB,CAAC,CAED;AACA,KAAM,CAAAqB,sBAAsB,CAAIC,WAAW,EAAK,CAC9CrB,mBAAmB,CAAGqB,WAAW,CACjCf,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAAEc,WAAW,CAAC,CAExDnB,YAAY,CAACY,aAAa,CAAC,GAAI,CAAAC,WAAW,CAAC,oBAAoB,CAAE,CAAEC,MAAM,CAAEK,WAAY,CAAC,CAAC,CAAC,CAC5F,CAAC,CAED;AACA,KAAM,CAAAC,sBAAsB,CAAGA,CAAA,GAAM,CACnC,GAAI,CAACtB,mBAAmB,CAAE,CACxBA,mBAAmB,CAAGM,YAAY,CAACa,OAAO,CAAC,qBAAqB,CAAC,CACnE,CACA,MAAO,CAAAnB,mBAAmB,CAC5B,CAAC,CAED;AACA,KAAM,CAAAuB,cAAc,CAAGA,CAAA,GAAM,CAC3B,GAAItB,WAAW,CAACuB,MAAM,GAAK,CAAC,CAAE,CAC5BvB,WAAW,CAAGO,IAAI,CAACU,KAAK,CAACZ,YAAY,CAACa,OAAO,CAAC,aAAa,CAAC,CAAC,EAAI,EAAE,CACrE,CACA,MAAO,CAAAlB,WAAW,CACpB,CAAC,CAED;AACA,KAAM,CAAAwB,YAAY,CAAIC,QAAQ,EAAK,CACjCxB,YAAY,CAACyB,gBAAgB,CAAC,aAAa,CAAGC,KAAK,EAAK,CACtDF,QAAQ,CAACE,KAAK,CAACZ,MAAM,CAAC,CACxB,CAAC,CAAC,CACJ,CAAC,CAED;AACA,KAAM,CAAAa,mBAAmB,CAAIH,QAAQ,EAAK,CACxCxB,YAAY,CAACyB,gBAAgB,CAAC,oBAAoB,CAAGC,KAAK,EAAK,CAC7DF,QAAQ,CAACE,KAAK,CAACZ,MAAM,CAAC,CACxB,CAAC,CAAC,CACJ,CAAC,CAEDc,MAAM,CAACC,OAAO,CAAG,CACf3B,eAAe,CACfa,eAAe,CACfG,sBAAsB,CACtBE,sBAAsB,CACtBC,cAAc,CAAG;AACjBE,YAAY,CACZI,mBACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}